[{"/home/ram/proyectowalletfirebase/FrontEnd/src/index.js":"1","/home/ram/proyectowalletfirebase/FrontEnd/src/App.js":"2","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Authentication/Authentication.js":"3","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/CuentasPorAprobar.js":"4","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/RecuperacionPassword/RecuperacionPassword.js":"5","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Estadistica/Estadistica.js":"6","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/CreateUser/CreateUser.js":"7","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/GestionUsuarios.js":"8","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Main/dashboard.js":"9","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/Bitacora.js":"10","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/ListaCuentas.js":"11","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Equipo/Equipo.js":"12","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Login/Login.js":"13","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/LandingPage/LandingPage.js":"14","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Main/Main.js":"15","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/ListaPagos.js":"16","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Configuracion/Configuracion.js":"17","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Metas/MetasPlanes.js":"18","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/Cuentas.js":"19","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/Administrador.js":"20","/home/ram/proyectowalletfirebase/FrontEnd/src/firebaseconf.js":"21","/home/ram/proyectowalletfirebase/FrontEnd/src/fontawesome/fontawesome.js":"22","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Chart/chart.jsx":"23","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Deposits/deposits.jsx":"24","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Menu/Menu.jsx":"25","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/MovList/movlist.jsx":"26","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Title/title.jsx":"27"},{"size":198,"mtime":1628529645719,"results":"28","hashOfConfig":"29"},{"size":3149,"mtime":1628697932847,"results":"30","hashOfConfig":"29"},{"size":5373,"mtime":1628529645719,"results":"31","hashOfConfig":"29"},{"size":6534,"mtime":1628529645723,"results":"32","hashOfConfig":"29"},{"size":6070,"mtime":1628529645723,"results":"33","hashOfConfig":"29"},{"size":5965,"mtime":1628784464388,"results":"34","hashOfConfig":"29"},{"size":5932,"mtime":1629079213433,"results":"35","hashOfConfig":"29"},{"size":7242,"mtime":1628529645723,"results":"36","hashOfConfig":"29"},{"size":5771,"mtime":1629169977441,"results":"37","hashOfConfig":"29"},{"size":6312,"mtime":1628529645723,"results":"38","hashOfConfig":"29"},{"size":8854,"mtime":1629090186447,"results":"39","hashOfConfig":"29"},{"size":10948,"mtime":1628529645723,"results":"40","hashOfConfig":"29"},{"size":5095,"mtime":1629079423745,"results":"41","hashOfConfig":"29"},{"size":12151,"mtime":1628784129101,"results":"42","hashOfConfig":"29"},{"size":12838,"mtime":1628529645723,"results":"43","hashOfConfig":"29"},{"size":8936,"mtime":1629090183731,"results":"44","hashOfConfig":"29"},{"size":37615,"mtime":1629168662668,"results":"45","hashOfConfig":"29"},{"size":15952,"mtime":1629077175386,"results":"46","hashOfConfig":"29"},{"size":26945,"mtime":1629090189411,"results":"47","hashOfConfig":"29"},{"size":25487,"mtime":1628529645723,"results":"48","hashOfConfig":"29"},{"size":627,"mtime":1628575716427,"results":"49","hashOfConfig":"29"},{"size":657,"mtime":1628529645719,"results":"50","hashOfConfig":"29"},{"size":1282,"mtime":1628779417985,"results":"51","hashOfConfig":"29"},{"size":1530,"mtime":1629171101658,"results":"52","hashOfConfig":"29"},{"size":7030,"mtime":1629178884727,"results":"53","hashOfConfig":"29"},{"size":6998,"mtime":1629171760243,"results":"54","hashOfConfig":"29"},{"size":342,"mtime":1628529645715,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"44he3n",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/ram/proyectowalletfirebase/FrontEnd/src/index.js",[],["126","127"],"/home/ram/proyectowalletfirebase/FrontEnd/src/App.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Authentication/Authentication.js",["128","129","130","131","132","133","134","135"],"import React,  {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst API = process.env.REACT_APP_API;\n\n\nconst UseStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n\n  \nexport default function Authentication(props) {\n\n    const history = useHistory();\n    const [error, handleError] = useState(false);\n\n    const [input_1, setInput_1] = useState(\"\");\n    const [input_2, setInput_2] = useState(\"\");\n    const [input_3, setInput_3] = useState(\"\");\n    const [input_4, setInput_4] = useState(\"\");\n\n    function pad(d) {\n        return (d < 10) ? '0' + d.toString() : d.toString();\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (input_1.trim() == \"\" || input_2.trim() == \"\" || input_3.trim() == \"\" || input_4.trim() == \"\") {\n            handleError(true);\n            return;\n        }\n        \n        const json_data = {\n            'input_1': pad(input_1),\n            'input_2': pad(input_2),\n            'input_3': pad(input_3),\n            'input_4': pad(input_4),\n            'email': props.location.state.mail\n        };\n\n        console.log(json_data);\n\n        const res = await fetch(`${API}/mail-validation`, {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(json_data),\n        });\n\n        const data = await res.json();\n        if (data.result == true){\n            alert(\"Usuario Validado\");\n            history.push('./login');\n        }\n        else{\n            alert(\"Codigo incorrecto\");\n        }\n    };\n    const classes = UseStyles();\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h3\" variant=\"h5\">\n          ingrese el codigo enviado al correo: {props.location.state.mail} para validar su cuenta\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={3}>\n              <TextField\n                name=\"code_1\"\n                id=\"numer_1\"\n                variant=\"outlined\"\n                inputProps={{min: 0, style: { textAlign: 'center' }}}\n                autoFocus\n                onInput = {(e) =>{\n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,2)\n                }}                \n                onChange={(e) => setInput_1(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <TextField\n                name=\"code_2\"\n                id=\"numer_2\"\n                variant=\"outlined\"\n                inputProps={{min: -1, style: { textAlign: 'center' }}}\n                onInput = {(e) =>{\n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,2)\n                }}\n                onChange={(e) => setInput_2(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <TextField\n                name=\"code_3\"\n                id=\"numer_3\"\n                variant=\"outlined\"\n                inputProps={{min: 0, style: { textAlign: 'center' }}}\n                onInput = {(e) =>{\n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,2)\n                }}\n                onChange={(e) => setInput_3(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <TextField\n                name=\"code_4\"\n                id=\"numer_4\"\n                variant=\"outlined\"\n                inputProps={{min: 0, style: { textAlign: 'center' }}}\n                onInput = {(e) =>{\n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,2)\n                }}\n                onChange={(e) => setInput_4(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n                <br></br>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            Validar usuario\n          </Button>\n        </form>\n      </div>\n    </Container>\n    )\n}\n\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/CuentasPorAprobar.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/RecuperacionPassword/RecuperacionPassword.js",["136"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n//import \"./Login.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//import github from '../assets/img/github.svg';\n//import google from '../assets/img/google.svg';\n\n\n\nconst API = process.env.REACT_APP_API;\n\nconst RecuperacionPassword = () => {\n    //loggeo\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();   \n        \n        const json_data = {\n            'user': email,\n            'password':password\n        };\n\n        const res = await fetch(`${API}/login`, {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(json_data),\n        });\n\n        const data = await res.json();\n        //console.log(data.Session);\n        if (data.Session === true){\n            window.location.href = \"http://localhost:3000/main\";\n//--------------cambiar a la ventana Main--------------\n            alert(\"Session Iniciada\");\n        }\n        else{\n            alert(\"Datos incorrectos\");\n        }\n    };\n    const handleSubmitContraseña = async (e) =>{\n        e.preventDefault();   \n        \n        const json_data = {\n            'user': email\n        };\n        //crear metodo de cambio\n        const res = await fetch(`${API}/`, {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(json_data),\n        });\n        const data = await res.json();\n        //crear condicion\n        //window.location.href = \"http://localhost:3000/login\";\n    };\n \n\n    return (\n        <div className=\"login-page\" style={{height: '100vh'}} >  \n            {/**HEADER */} \n            <header className=\"header header-scrolled fixed-top d-flex align-items-center header-transparent\">\n                <div className=\"container d-flex justify-content-between align-items-center\">\n                    <div className=\"logo col-md-6\">\n                        <h1 className=\"text-light\">\n                            <Link to=\"/#\" ><span>Wallet</span></Link>\n                        </h1>\n                        {/**ARREGLAR LOGO POR SI SE NECESITA */}\n                        {/*<Link to=\"/\"><img src={Logo} className=\"img-fluid\" alt=\"\" /></Link>*/}\n                        \n                    </div>\n                    <nav className=\"navbar-global\">\n                            <ul>\n                                <li><input className=\"form-control\" placeholder=\"Correo Electronico\" type=\"email\" onChange={(e) => setEmail(e.target.value)}></input></li>\n                                <li><input className=\"form-control\" placeholder=\"Contraseña\" type=\"password\" onChange={(e) => setPassword(e.target.value)}></input></li>\n                                <li><button type=\"button\" className=\"btn btn-outline-light\" onClick={handleSubmit}>Iniciar sesión</button></li>\n                            </ul>\n                            {/*<i className=\"bi bi-list mobile-nav-toggle\"></i>*/}\n                    </nav>\n                </div>\n            </header>\n            <section className=\"section section-shaped section-lg\">\n                <div className=\"shape shape-style-1 bg-gradient-default\">\n                    <span />\n                    <span />\n                    <span />\n                    <span />\n                    <span />\n                    <span />\n                    <span />\n                    <span />\n                </div>\n                <div className=\"container mt-0\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-lg-5\">\n                            <div className=\"card bg-secondary shadow border-0\">\n                                <div className=\"card-header bg-white pb-5\"></div>\n                                <div className=\"text-muted text-center mb-3\"><h5>Recupera tu cuenta</h5></div>\n                                <div className=\"card-body px-lg-5 py-lg-5\">\n                                    <form >\n                                        <div className=\"form-group mb-3\">\n                                            <div className=\"input-group input-group-alternative\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\"><FontAwesomeIcon icon={['fa', 'at']}/></span>\n                                                </div>\n                                                <input className=\"form-control\" placeholder=\"Correo Electronico\" type=\"email\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"text-center\">\n                                            <button type=\"button\" className=\"btn btn-outline-danger my-4\"><Link to=\"/login\">Cancelar</Link></button>\n                                            <button type=\"button\" className=\"btn btn-outline-primary my-4\" onClick={handleSubmitContraseña}>Enviar</button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/**FOOOOTER */}\n            <footer className=\"footer\" data-aos=\"fade-up\" data-aos-easing=\"ease-in-out\" data-aos-duration=\"500\">\n                    <div className=\"container\">\n                        <div className=\"copyright\">\n                            &copy; Copyright <strong><span>Wallet</span></strong>. \n                        </div>\n                        <div className=\"credits\">\n                            Diseñado por Grupo Wallet\n                        </div>\n                    </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default RecuperacionPassword;","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Estadistica/Estadistica.js",["137","138","139","140","141","142"],"import React, { useEffect, useState } from 'react';\nimport {auth,database} from '../../../firebaseconf'\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '../../../Components/Menu/Menu';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport Chart from '../../../Components/Chart/chart';\n\nconst API = process.env.REACT_APP_API;\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }));\n\nconst Estadistica = () => {\n    const classes = useStyles();\n    const idUsuario = localStorage.getItem(\"Session_id\");\n    const [data, setData] = useState([]);\n    const [datosPagos, setPagos] = useState({});\n    const [datosCuentas, setCuentas] = useState({});\n\n    const obtenerPagos = async () => {\n      await auth.onAuthStateChanged((z)=>{if(z){\n          const data= async()=>{\n              await database.ref().child(z.uid).child('Pagos').on('value',(e)=>{\n              const todo=[];\n              const da= e.forEach(element => {\n                  todo.push(element.val())\n              });\n              if(todo.length>0){\n                  setPagos(todo);\n                }   \n          })}\n          data();\n      }else{\n          alert(\"error\")\n      }})\n          }\n\n          const obtenerCuentas = async () => {\n            await auth.onAuthStateChanged((z)=>{if(z){\n                const data= async()=>{\n                    await database.ref().child(z.uid).child('cuentas').on('value',(e)=>{\n                    const todo=[];\n                    const da= e.forEach(element => {\n                        todo.push(element.val())\n                    });\n                    if(todo.length>0){\n                        setCuentas(todo);\n                      }   \n                })}\n                data();\n            }else{\n                alert(\"error\")\n            }})\n                }\n\n  \n \n    useEffect(() => {\n      obtenerPagos();\n      obtenerCuentas();\n    }, []);\n\n    return (\n        <div className={classes.root}>\n        <Menu>\n          {/**Barra Lateral y Barra Horizontal */}\n        </Menu>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n          {datosPagos.length>0 ? \n          (<Grid item xs={12} md={8} lg={12}>\n                <Paper className={classes.fixedHeightPaper}>\n                  <Chart data={datosPagos} title=\"Pagos Realizados\"/>\n                </Paper>\n            </Grid>):\n            (<Grid item xs={12} md={8} lg={12}>\n              <Paper >\n                <p> No cuenta con registros en su cuenta para visualizar graficos, cree cuentas y pagos para poder ver la grafica</p>\n              </Paper>\n          </Grid>)}\n\n          {datosCuentas.length>0 ? \n          (<Grid item xs={12} md={8} lg={12}>\n                <Paper className={classes.fixedHeightPaper}>\n                  <Chart data={datosCuentas} title=\"Cuentas Bancarias\"/>\n                </Paper>\n            </Grid>):\n            (<Grid item xs={12} md={8} lg={12}>\n              <Paper >\n                <p>No cuenta con registros en su cuenta para visualizar graficos, cree cuentas y pagos para poder ver la grafica </p>\n              </Paper>\n          </Grid>)}\n            \n              {/*cuentas.length>0 ?\n              (<Grid item xs={12} md={8} lg={12}>\n                <Paper className={classes.fixedHeightPaper}>\n                  <Chart data={cuentas} title=\"Cuentas\"/>\n                </Paper>\n              </Grid>):\n              (<Grid item xs={12} md={8} lg={12}>\n                <Paper >\n                  <p style={{color:\"red\"}}>Lo sentimos no se puede acceder a la informacion, recargue la pagina</p>\n                </Paper>\n              </Grid>)*/}\n            </Grid> \n        </Container>\n      </main>\n    </div>\n    )\n}\n\nexport default Estadistica;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/CreateUser/CreateUser.js",["143","144","145","146","147","148","149","150","151","152","153"],"import React,  {useState} from 'react';\nimport {auth} from '../../../firebaseconf';\nimport  { Redirect, useHistory } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport { LaptopWindowsRounded } from '@material-ui/icons';\n\nconst API = process.env.REACT_APP_API;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"/#\">\n        Wallet\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst UseStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function CreateUser() {\n    const classes = UseStyles();\n    const [name, setName] = useState(\"\");\n    const [last_name, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const history = useHistory();\n    \n\n    const handleSubmitCreate = async (e) => {\n        e.preventDefault(); \n        if (email.trim() == \"\" || password.trim() == \"\" || name.trim() == \"\"  || last_name.trim() == \"\" ) {\n          alert(\"No puede dejar campos vacios\");\n         }else{\n          await auth.createUserWithEmailAndPassword(email,password)\n          .then(f=>{\n            let use=auth.currentUser;\n            use.updateProfile({displayName:name+last_name})\n            use.sendEmailVerification()\n            .then(f=>{\n              alert(\"Revise su correo, se envio el enlace para que verifique\");\n              window.location='/login';\n            })\n          }  \n          )\n          .catch(e=>{\n            if(e==\"Error: The email address is already in use by another account.\"){\n              alert(\"Usuario ya tiene una cuenta, registrada\")\n            }else{\n              if(e==\"Error: The email address is badly formatted.\"){\n                alert(\"El email ingresado es incorrecto\")\n              }else{\n                if(e==\"Error: Password should be at least 6 characters\"){\n                  alert(\"Contraseña demasiado corta\")\n                }\n              }\n            }\n          })\n         }\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Crear Usuarios\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Nombre\"\n                autoFocus\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Apellidos\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Contraseña\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"Acepto los terminos y condiciones\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmitCreate}\n          >\n            Crear Usuario\n          </Button>\n          <Link to=\"/login\" variant=\"body2\" >\n                <p>Ya tienes cuenta? Inicia Sesion</p>\n          </Link>\n          <Link to=\"/\" variant=\"body2\" >\n                <p>Volver a la pagina Principal</p>\n          </Link>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/GestionUsuarios.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Main/dashboard.js",["154","155","156","157","158","159","160","161"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Deposits from './../../../Components/Deposits/deposits';\r\nimport Orders from '../../../Components/MovList/movlist';\r\nimport Menu from '../../../Components/Menu/Menu';\r\nimport {auth,database} from '../../../firebaseconf';\r\n\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      \r\n        Wallet\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [informacion, setInformacion] = useState([]);\r\n  const session_id = localStorage.getItem(\"Session_id\");\r\n  const [datosCuentas, setCuentas] = useState(0);\r\n  const [sumaCuentas,setSumaCuentas]=useState(0);\r\n  const [datosPagos, setPagos] = useState({});\r\n  const [sumaPagos,setSumaPagos]=useState(0);\r\n\r\n  const obtenerCuentas = async () => {\r\n    await auth.onAuthStateChanged((z)=>{if(z){\r\n        const data= async()=>{\r\n            await database.ref().child(z.uid).child('cuentas').on('value',(e)=>{\r\n            let suma=0.0;\r\n            const todos=e.val();\r\n            for(let id in  todos){\r\n                suma+=parseFloat(todos[id].mount)\r\n            }\r\n            console.log(suma)\r\n            if(suma>=0){\r\n                setSumaCuentas(suma);\r\n              }   \r\n        })}\r\n        data();\r\n    }else{\r\n        alert(\"error\")\r\n    }})\r\n        }\r\n\r\n\r\n        const obtenerPagos = async () => {\r\n          await auth.onAuthStateChanged((z)=>{if(z){\r\n              const data= async()=>{\r\n                  await database.ref().child(z.uid).child('Pagos').on('value',(e)=>{\r\n                  let suma=0.0;\r\n                  const todos=e.val();\r\n                  for(let id in  todos){\r\n                      suma+=parseFloat(todos[id].monto)\r\n                  }\r\n                  console.log(suma)\r\n                  if(suma>=0){\r\n                      setSumaPagos(suma);\r\n                    }   \r\n              })}\r\n              data();\r\n          }else{\r\n              alert(\"error\")\r\n          }})\r\n              }\r\n\r\n\r\n  useEffect(() => {\r\n    obtenerCuentas();\r\n    obtenerPagos();\r\n  }, [])\r\n  \r\n  return (\r\n      <div className={classes.root}>\r\n        <Menu>\r\n        </Menu>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4} lg={3}>\r\n              <Deposits money={sumaCuentas-sumaPagos} title=\"Balance\"/>              \r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Deposits money={sumaPagos} title=\"Gastos\"/>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Deposits money={sumaCuentas} title=\"Cuentas\"/>              \r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Deposits money={((sumaPagos*100)/sumaCuentas).toFixed(2)} title=\"Porcentaje Gastos\"/>              \r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n}\r\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/Bitacora.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/ListaCuentas.js",["162","163","164","165"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {database,auth} from '../../../firebaseconf'\n//importaciones material-ui\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../Components/Menu/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst API = process.env.REACT_APP_API;\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst ListaCuentas = () => {\n    const classes = useStyles();\n    const [iduser, setuser] = useState(\"\");\n    /**llenado de tablas */\n    const [datosCuentas, setCuentas] = useState({});\n    // localStorage.getItem(1)\n    const idUsuario = localStorage.getItem(\"Session_id\");\n\n    const styles = (theme) => ({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 400,\n        },\n        table: {\n            minWidth: 650,\n        },\n    });\n\n    const obtenerCuentas = async () => {\n        await auth.onAuthStateChanged((z)=>{if(z){\n            const data= async()=>{\n                await database.ref().child(z.uid).child('cuentas').on('value',(e)=>{\n                const todo=[];\n                const todos=e.val();\n                for(let id in  todos){\n                    todo.push({id,...todos[id]})\n                }\n                console.log(todo)\n                if(todo.length>=0){\n                    setCuentas(todo);\n                  }   \n            })}\n            data();\n        }else{\n            alert(\"error\")\n        }})\n            }\n\n    const eliminarCuentas = async (id) => { \n        try{\n            await auth.onAuthStateChanged((z)=>{if(z){\n            database.ref(`/${z.uid}/cuentas/${id}`).remove()\n            .then(obtenerCuentas())\n            }})\n            }catch(e){\n                console.log(e);\n                }\n            }\n\n  \n    useEffect(() => {\n        obtenerCuentas();\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <Menu>\n                {/**Barra Lateral y Barra Horizontal */}\n            </Menu>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div className=\"content mt-2\">\n                        <div className=\"row-perfil\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"title\">Cuentas creadas</h5>\n                                    </div>\n                                    <div className=\"card-body \">\n\n                                        <TableContainer component={Paper}>\n                                            <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Nombre del banco</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Numero Cuenta</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Tipo cuenta</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Eliminar</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {\n                                                    datosCuentas.length>=0 ?\n                                                    (datosCuentas.map((row, ke) => (\n                                                        <TableRow key={row.id}>\n                                                            <TableCell align=\"center\" component=\"rigth\" scope=\"row\">{++ke}</TableCell>\n                                                            <TableCell align=\"right\">{row.name_bank_account}</TableCell>\n                                                            <TableCell align=\"right\">{row.number_account}</TableCell>\n                                                            <TableCell align=\"right\">{row.type_bank}</TableCell>\n                                                            <TableCell align=\"right\">{row.mount}</TableCell>\n                                                            <TableCell align=\"right\">\n                                                            <Button size=\"small\"  onClick ={(id)=>{eliminarCuentas(row.id)}}  style={{ backgroundColor: '#e53935', color: '#fff' }} >Eliminar</Button>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                     ))):\n                                                    (console.log(' no existe data'))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Link to='/cuentas'>\n                               <Button  variant=\"contained\" size=\"small\" color=\"primary\">Regresar</Button>\n                        </Link>\n                    </div>\n                </Container>\n            </main>\n        </div>\n    )\n}\n\nexport default ListaCuentas;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Equipo/Equipo.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/Login/Login.js",["166","167","168","169","170","171","172","173","174","175"],"import \"./Login.css\";\nimport {auth} from '../../../firebaseconf';\nimport React, {useState} from 'react';\nimport  { useHistory, Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n//import { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Mail } from \"@material-ui/icons\";\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Wallet\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [nameUser, setNameUser] = useState(\"\");\n  const [idUser, setIdUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user,setUser]=useState(\"\");\n  const [verifica,setVerifica]=useState(\"\");\n\n  const handleSubmit = async (e) => {\n        e.preventDefault();  \n        if (email.trim() == \"\" || password.trim() == \"\") {\n            alert(\"No puede dejar campos vacios\");\n        }\n        else{\n        await auth.signInWithEmailAndPassword(email,password)\n         .then(e=>{\n           auth.onAuthStateChanged((user)=>{\n              setIdUser(user.uid);\n              setNameUser(user.displayName);\n              setVerifica (user.emailVerified);\n              if(user.emailVerified){\n                window.location='/dashboard'\n              }else{\n                alert('su cuenta no esta verificada, revise su correo electronico')\n              }\n           })\n          localStorage.setItem('Session_email', email);\n          localStorage.setItem('Session_name', nameUser);\n          localStorage.setItem('Session_id', idUser);\n          localStorage.setItem('verficacion',verifica); \n        })\n        .catch((error)=>{\n          if(error==\"Error: The password is invalid or the user does not have a password.\"){\n            alert('Usuario y/o contraseña incorrectas, verifique su informacion')\n          }else{\n            if(error==\"Error: The password is invalid or the user does not have a password.\"){\n              alert(\"La contraseña no cumple los requisitos\")\n            }\n          }\n        })\n    };\n  }\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Inicio de Sesion\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Correo Electronico\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Contraseña\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Mantener session activa\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            Iniciar Session\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/create-user\" variant=\"body2\">\n                <p>No tienes cuenta? Crear usuario</p>\n              </Link>\n              <Link to=\"/\" variant=\"body2\">\n                <p>volver a pagina principal</p>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Pagina/LandingPage/LandingPage.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Main/Main.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/ListaPagos.js",["176","177"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {database,auth} from '../../../firebaseconf'\n//importaciones material-ui\n\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../Components/Menu/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst API = process.env.REACT_APP_API;\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst ListaPagos = () => {\n    const classes = useStyles();\n\n\n    /**llenado de tablas */\n    //const [planAhorro, setPlanAhorro] = useState([]);\n    //const [categorias, setCategorias] = useState([]);\n    // localStorage.getItem(1)\n    const idUsuario = localStorage.getItem(\"Session_id\");\n    const [datosPagos, setPagos] = useState({});\n    \n\n    const styles = (theme) => ({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 400,\n        },\n        table: {\n            minWidth: 650,\n        },\n    });\n\n\n    const obtenerPagos = async () => {\n        await auth.onAuthStateChanged((z)=>{if(z){\n            const data= async()=>{\n                await database.ref().child(z.uid).child('Pagos').on('value',(e)=>{\n                const todo=[];\n                const todos=e.val();\n                for(let id in  todos){\n                    todo.push({id,...todos[id]})\n                }\n                console.log(todo)\n                if(todo.length>=0){\n                    setPagos(todo);\n                  }   \n            })}\n            data();\n        }else{\n            alert(\"error\")\n        }})\n            }\n\n            const eliminarPagos = async (id) => { \n                try{\n                    await auth.onAuthStateChanged((z)=>{if(z){\n                    database.ref(`/${z.uid}/Pagos/${id}`).remove()\n                    .then(obtenerPagos())\n                    }})\n                    }catch(e){\n                        console.log(e);\n                        }\n                    }\n\n\n    useEffect(() => {\n        obtenerPagos();\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <Menu>\n                {/**Barra Lateral y Barra Horizontal */}\n            </Menu>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div className=\"content mt-2\">\n                        <div className=\"row-perfil\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"title\">Listado de pagos</h5>\n                                    </div>\n                                    <div className=\"card-body \">\n\n                                        <TableContainer component={Paper}>\n                                            <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Nombre</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Categoria</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Descripcion</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Eliminar</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {\n                                                    datosPagos.length>0 ?\n                                                    (datosPagos.map((row, key) => (\n                                                        <TableRow key={key}>\n                                                            <TableCell component=\"rigth\" scope=\"row\">{++key}</TableCell>\n                                                            <TableCell align=\"right\">{row.nombrePago}</TableCell>\n                                                            <TableCell align=\"right\">{row.monto}</TableCell>\n                                                            <TableCell align=\"right\">{row.categoria}</TableCell>\n                                                            <TableCell align=\"right\">{row.descripccion}</TableCell>\n                                                            <TableCell align=\"right\">\n                                                            <Button size=\"small\" onClick ={(id)=>{eliminarPagos(row.id)}} style={{ backgroundColor: '#e53935', color: '#fff' }} >Eliminar</Button>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                     ))):\n                                                    (console.log(' no existe data'))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Link to='/cuentas'>\n                               <Button  variant=\"contained\" size=\"small\" color=\"primary\">Regresar</Button>\n                        </Link>\n                    </div>\n                </Container>\n            </main>\n        </div>\n    )\n}\n\nexport default ListaPagos;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Configuracion/Configuracion.js",["178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport profile from '../../../assets/img/profile-img.jpg';\nimport \"../Configuracion/Configuracion.css\";\nimport Menu from '../../../Components/Menu/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport FilledInput from '@material-ui/core/FilledInput';\n\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\n\n//import finanzas from '../assets/img/finanzas.jpg';\nconst API = process.env.REACT_APP_API;\n\nconst Configuracion = () => {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [imagen, setImagen] = useState(null);\n    const [contraseña, setContraseña] = useState('');\n    const [contraseñaNueva, setContraseñaNueva] = useState('');\n    const [confirmar, setConfirmar] = useState('');\n    const [last_name, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [nameImage, setNameImage] = useState('')\n    //campos nuevos favor agregar a la base\n    const [direccion, setDireccion] = useState(\"\");\n    const [ciudad, setCiudad] = useState(\"\");\n    const [pais, setPais] = useState(\"\");\n    const [codigoPostal, setCodigoPostal] = useState('');\n    const [descripccion, setDescripccion] = useState('');\n    const [telefono, setTelefono] = useState('')\n    const [urlImagen, setUrlImage] = useState('')\n    const [editar, setEditar] = useState(false)\n    /*falta implementacion dinamica en imput*/\n    const handleSubmitActualizar = async (e) => {\n        e.preventDefault();\n        const json_data = {\n            'email': email,\n            'name': name,\n            'last_name': last_name,\n            'password': password,\n            'direccion': direccion,\n            'ciudad': ciudad,\n            'pais': pais,\n            'codigoPostal': codigoPostal,\n            'descripcion': descripccion,\n            'telefono': telefono\n        }\n\n        const res = await fetch(`${API}/`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(json_data),\n        });\n\n        const data = await res.json();\n        console.log(data);\n        //crear condicion y sustituir valores en BD\n    };\n\n    useEffect(() => {\n        getUser();\n    }, [])\n\n    const getUser = () => {\n\n        let nameUsuario = localStorage.getItem(\"name\");\n        let last_nameUsuario = localStorage.getItem(\"last_name\");\n        let emailUsuario = localStorage.getItem(\"email\");\n        let direccionUsuario = localStorage.getItem(\"direccion\");\n        let ciudadUsuario = localStorage.getItem(\"ciudad\");\n        let telefonoUsuario = localStorage.getItem(\"telefono\");\n        let paisUsuario = localStorage.getItem(\"pais\");\n        let codigoPostalUsuario = localStorage.getItem(\"codigoPostal\");\n        let descripcionUsuario = localStorage.getItem(\"descripcion\");\n\n        setName(nameUsuario);\n        setLastName(last_nameUsuario);\n        setCiudad(ciudadUsuario);\n        setEmail(emailUsuario);\n        setDireccion(direccionUsuario);\n        setDescripccion(descripcionUsuario);\n        setTelefono(telefonoUsuario);\n        setCodigoPostal(codigoPostalUsuario);\n        setPais(paisUsuario);\n\n    }\n\n    const subirImagen = async (e) => {\n        let formData = new FormData();\n        let imagen = e.target.files[0];\n        let uploadPreset = 'h7gfbvl6';\n        let urlApiImagen = 'https://api.cloudinary.com/v1_1/dnnfs5ttk/image/upload';\n        formData.append('file', imagen);\n        formData.append('upload_preset', uploadPreset);\n\n        const response = await fetch(urlApiImagen, {\n            method: 'POST',\n            body: formData\n        });\n\n        const body = await response.json();\n        const { url } = body;\n\n        const res = await fetch('Direccion de su endepoing para visualizar la foto', {\n            method: 'PUT',\n            body: JSON.stringify({ urlFoto: url })\n        });\n        const bodyFoto = await res.json();\n        console.log(bodyFoto);\n    }\n\n    const openDialogoImagen = () => {\n        document.getElementById('input-img-perfil').click();\n    }\n\n    const actualizarContrasena = () => {\n        if (contraseñaNueva !== confirmar) {\n            console.log('NO hacer la peticion');\n        } else {\n            console.log('hacer la peticion');\n\n            let data = {\n                contraseña,\n                confirmar,\n                contraseñaNueva\n            }\n            console.log(data)\n\n\n            // try {\n            //     let response = await fetch(`${API}/`, {\n            //         method: \"POST\",\n            //         headers: { \"Content-Type\": \"application/json\" },\n            //         body: JSON.stringify(data),\n            //     });\n            //     let body = await response.json();\n\n            //     console.log('Respuesta del servidor => ', body)\n\n            // } catch (error) {\n            //     console.error(error);\n            // }\n\n\n        }\n    }\n\n    const actualizarInformacion = () => {\n        let data = {\n            email,\n            name,\n            last_name,\n            direccion,\n            ciudad,\n            pais,\n            telefono,\n            descripccion,\n            codigoPostal\n        }\n        console.log(data)\n\n        // try {\n        //     let response = await fetch(`${API}/`, {\n        //         method: \"POST\",\n        //         headers: { \"Content-Type\": \"application/json\" },\n        //         body: JSON.stringify(data),\n        //     });\n        //     let body = await response.json();\n\n        //     console.log('Respuesta del servidor => ', body)\n\n        // } catch (error) {\n        //     console.error(error);\n        // }\n\n    }\n\n    const cerrarSesion = async (e) => {\n        e.preventDefault();\n\n        localStorage.clear();\n        window.location.href = \"http://localhost:3000/login\";\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Menu />\n                <main style={{ marginTop: \"8vh\" }} className={classes.content}>\n                    <div className=\"content\">\n                        <div className=\"row-perfil d-flex justify-content-center\" style={{ marginTop: \"10vh\" }}>\n                            <div className=\"col-md-8\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"title\">Configuracion Perfil</h5>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <form>\n                                            <div className=\"row-perfil m-2\">\n                                                <div className=\"col-md-12 d-none\">\n                                                    <div className=\"form-group\">\n                                                        <label>Imagen perfil</label>\n                                                        <input onChange={subirImagen} className=\"d-none\" type=\"file\" id=\"input-img-perfil\" />\n                                                        <input disabled=\"\" placeholder=\"img\" type=\"text\" className=\"form-control d-none\"></input>\n                                                        <div className=\"alert subir-img\" role=\"alert\" onClick={openDialogoImagen} >\n                                                            <p className=\"text-dark text-sm\" >\n                                                                <span>\n                                                                    <img height=\"25px\" width=\"25px\" src=\"https://png.pngtree.com/png-clipart/20190903/original/pngtree-file-icon-png-image_4419863.jpg\" />\n                                                                </span> {nameImage.trim() == 0 ? 'Haz click para subir la imagen' : nameImage}\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Correo Electronico\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={email}\n                                                            onChange={e => setEmail(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row m-2\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Nombre\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={name}\n                                                            onChange={e => setName(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Correo Electronico\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={last_name}\n                                                            onChange={e => setLastName(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n\n                                                        <div className=\"row\" >\n                                                            <div className=\"col-6\" >\n                                                                <Button variant=\"contained\" color=\"primary\" data-toggle=\"modal\" data-target=\"#exampleModal2\" >\n                                                                    Actualiza contraseña\n                                                                </Button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row m-2\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Direccion\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={direccion}\n                                                            onChange={e => setDireccion(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Numero de telefono\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={telefono}\n                                                            onChange={e => setTelefono(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row m-2\">\n                                                <div className=\"pr-1 col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Ciudad\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={ciudad}\n                                                            onChange={e => setCiudad(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Pais\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={pais}\n                                                            onChange={e => setPais(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextField\n                                                            style={{ width: '100%' }}\n                                                            id=\"standard-multiline-flexible\"\n                                                            label=\"Codigo Postal\"\n                                                            multiline\n                                                            maxRows={4}\n                                                            value={codigoPostal}\n                                                            onChange={e => setCodigoPostal(e.target.value)}\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row m-2\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <TextareaAutosize\n                                                            onChange={e => setDescripccion(e.target.value)}\n                                                            style={{ width: '100%' }}\n                                                            aria-label=\"minimum height\"\n                                                            minRows={7} \n                                                            value={descripccion}\n                                                            placeholder=\"Sobre mi\"\n                                                            disabled\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"text-center\">\n                                                <Button variant=\"contained\" color=\"primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\">\n                                                    Actualizar Perfil\n                                                </Button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-4 d-none\">\n                                <div className=\"card-user card\">\n                                    <div className=\"card-body\">\n                                        <div className=\"author\">\n                                            <Link to=\"/#\" className=\"usuario-config\">\n                                                <img alt=\"...\" className=\"avatar border-gray\" src={profile}></img>\n                                                <h5 className=\"title\">{name} {last_name}</h5>\n                                            </Link>\n                                        </div>\n                                        <p></p>\n                                        <p className=\"description text-center\">\n                                            \"Descripcion\n                                            <br></br>Descripcion <br></br>Descripcion\"\n                                        </p>\n                                        <p className=\"description text-center\">Balance:</p>\n                                    </div>\n\n                                    <hr></hr>\n\n                                    <div>\n                                        {/* Button trigger modal */}\n\n                                        {/* Modal */}\n                                        <div style={{ marginTop: \"5vh\" }} className=\"modal fade\" id=\"exampleModal2\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div className=\"modal-dialog\" role=\"document\">\n                                                <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Actualizar contraseña</h5>\n                                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                            <span aria-hidden=\"true\">×</span>\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <div className=\"form-group\">\n                                                            <label>Contraseña anterior</label>\n                                                            <input placeholder=\"Contraseña\" value={contraseña} onChange={(e) => setContraseña(e.target.value)} type=\"password\" className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Contraseña nueva</label>\n                                                            <input placeholder=\"Contraseña nueva\" value={contraseñaNueva} onChange={(e) => setContraseñaNueva(e.target.value)} type=\"password\" className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Confirmar Contraseña</label>\n                                                            <input placeholder=\"Confirmar contraseña\" value={confirmar} onChange={(e) => setConfirmar(e.target.value)} type=\"password\" className=\"form-control\"></input>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <Button variant=\"contained\" color=\"secondary\" data-dismiss=\"modal\">Cerrar</Button>\n                                                        <Button variant=\"contained\" color=\"primary\" onClick={actualizarContrasena} >Actualizar</Button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div style={{ marginTop: \"5vh\" }} className=\"modal fade\" id=\"exampleModal1\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div className=\"modal-dialog\" role=\"document\">\n                                                <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Actualizar Perfil</h5>\n                                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                            <span aria-hidden=\"true\">×</span>\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form-group m-2 mt-0\">\n                                                                <TextField\n                                                                    style={{ width: '100%' }}\n                                                                    id=\"standard-multiline-flexible\"\n                                                                    label=\"Correo Electronico\"\n                                                                    maxRows={4}\n                                                                    value={email}\n                                                                    onChange={e => setEmail(e.target.value)}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form-group m-2\">\n                                                                <TextField\n                                                                    style={{ width: '100%' }}\n                                                                    id=\"standard-multiline-flexible\"\n                                                                    label=\"Nombre\"\n                                                                    maxRows={4}\n                                                                    value={name}\n                                                                    onChange={e => setName(e.target.value)}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form-group m-2\">\n                                                                <TextField\n                                                                    style={{ width: '100%' }}\n                                                                    id=\"standard-multiline-flexible\"\n                                                                    label=\"Apellido\"\n                                                                    maxRows={4}\n                                                                    value={last_name}\n                                                                    onChange={e => setLastName(e.target.value)}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"form-group m-2\">\n                                                                <TextField\n                                                                    style={{ width: '100%' }}\n                                                                    id=\"standard-multiline-flexible\"\n                                                                    label=\"Direccion\"\n                                                                    maxRows={4}\n                                                                    value={direccion}\n                                                                    onChange={e => setDireccion(e.target.value)}\n                                                                />\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"row\">\n                                                            <div className=\"col-6\" >\n                                                                <div className=\"form-group m-2\">\n                                                                    <TextField\n                                                                        style={{ width: '100%' }}\n                                                                        id=\"standard-multiline-flexible\"\n                                                                        label=\"Cuidad\"\n                                                                        maxRows={4}\n                                                                        value={ciudad}\n                                                                        onChange={e => setCiudad(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-6\" >\n                                                                <div className=\"form-group m-2\">\n                                                                    <TextField\n                                                                        style={{ width: '100%' }}\n                                                                        id=\"standard-multiline-flexible\"\n                                                                        label=\"Pais\"\n                                                                        maxRows={4}\n                                                                        value={pais}\n                                                                        onChange={e => setPais(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-6\" >\n                                                                <div className=\"form-group m-2\">\n                                                                    <TextField\n                                                                        style={{ width: '100%' }}\n                                                                        id=\"standard-multiline-flexible\"\n                                                                        label=\"Codigo postal\"\n                                                                        maxRows={4}\n                                                                        value={codigoPostal}\n                                                                        onChange={e => setCodigoPostal(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-6\" >\n                                                                <div className=\"form-group m-2\">\n                                                                    <TextField\n                                                                        style={{ width: '100%' }}\n                                                                        id=\"standard-multiline-flexible\"\n                                                                        label=\"telefono\"\n                                                                        maxRows={4}\n                                                                        value={telefono}\n                                                                        onChange={e => setTelefono(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-md-12\">\n                                                                <div className=\"form-group m-2\">\n                                                                    <TextareaAutosize\n                                                                        onChange={e => setDescripccion(e.target.value)}\n                                                                        style={{ width: '100%', height: '100%' }}\n                                                                        aria-label=\"minimum height\"\n                                                                        minRows={5}\n                                                                        value={descripccion}\n                                                                        placeholder=\"Descripcion perfil\"\n\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n                                                        <button type=\"button\" onClick={actualizarInformacion} className=\"btn btn-sm btn-primary\">Actualizar</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        </>\n    );\n}\nexport default Configuracion;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Metas/MetasPlanes.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { useEffect, useRef, useState } from 'react';\nimport {auth,database} from'../../../firebaseconf';\n\n//importaciones material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../Components/Menu/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { DialogContentText, Modal } from '@material-ui/core';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst MetasPlanes = () => {\n    const classes = useStyles();\n    const [iduser, setuser] = useState(\"\");\n    const [openMetas, setOpenMetas] = useState(false);\n    //const [openPlan, setOpenPlan] = useState(false);\n    const [datosMetas, setDatosMetas] = useState([]);\n    const [dataCategoria, setDataCategoria] = useState([]);\n    const [datosCuentas, setCuentas] = useState([]);\n\n    const idUsuario = localStorage.getItem(\"Session_id\");\n\n    const [nameMeta, setNameMeta] = useState('Prueba');\n    const inputMeta = useRef(null)\n\n    const [descripcionMeta, setDescripcionMeta] = useState(\"\");\n    const [date_init, setDateInit] = useState(\"\");\n    const [date_final, setDateFinal] = useState(\"\");\n    const [montoMeta, setMontoMeta] = useState(\"\");\n    const [tipoCuenta, setTipoCuenta] = useState(0);\n    const [tipoCategoria, setTipoCategoria] = useState(0);\n\n    const handleSubmitMetas = async (e) => {\n        const json_data = {\n            name_meta : nameMeta,\n            descripcion_meta: descripcionMeta,\n            date_inicio: date_init,\n            date_final: date_final,\n            monto_meta: montoMeta,\n            categorie: tipoCategoria,\n        }; \n        try{\n            await auth.onAuthStateChanged((z)=>{if(z){\n                database.ref(`/${z.uid}/Metas/`).push(json_data)\n                .then(handleCloseMetas)\n                    }})\n               \n            }catch(e){\n               \n                alert(e)\n                }\n    };\n\n    const styles = (theme) => ({\n        root: {\n            margin: 0,\n            padding: theme.spacing(2),\n        },\n        closeButton: {\n            position: 'absolute',\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n            color: theme.palette.grey[500],\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 400,\n        },\n        table: {\n            minWidth: 650,\n        },\n    });\n\n    const DialogTitle = withStyles(styles)((props) => {\n        const { children, classes, onClose, ...other } = props;\n        return (\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\n                <Typography variant=\"h6\">{children}</Typography>\n                {onClose ? (\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                ) : null}\n            </MuiDialogTitle>\n        );\n    });\n\n    const DialogContent = withStyles((theme) => ({\n        root: {\n            padding: theme.spacing(2),\n        },\n    }))(MuiDialogContent);\n\n    const DialogActions = withStyles((theme) => ({\n        root: {\n            margin: 0,\n            padding: theme.spacing(1),\n        },\n    }))(MuiDialogActions);\n\n\n    const obtenerMetas = async () => {\n        await auth.onAuthStateChanged((z)=>{if(z){\n            const data= async()=>{\n                await database.ref().child(z.uid).child('Metas').on('value',(e)=>{\n                const todo=[];\n                const todos=e.val();\n                for(let id in  todos){\n                    todo.push({id,...todos[id]})\n                }\n                console.log(todo)\n                if(todo.length>=0){\n                    setDatosMetas(todo);\n                  }   \n            })}\n            data();\n        }else{\n            alert(\"error\")\n        }})\n            }\n\n            const eliminarMetas = async (id) => { \n                try{\n                    await auth.onAuthStateChanged((z)=>{if(z){\n                    database.ref(`/${z.uid}/Metas/${id}`).remove()\n                    .then(obtenerMetas())\n                    }})\n                    }catch(e){\n                        console.log(e);\n                        }\n                    }\n\n    \n\n\n    const handleCloseMetas = () => {\n        setOpenMetas(false);\n    }\n    const handleOpenMetas = () => {\n        setOpenMetas(true);\n    }\n    useEffect(() => {\n        obtenerMetas();\n    }, [])\n\n\n    return (\n        <div className={classes.root}>\n            <Menu>\n                {/**Barra Lateral y Barra Horizontal */}\n            </Menu>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div className=\"content\">\n                        <div className=\"row-perfil\">\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"title\">Metas</h5>\n                                    </div>\n                                    <div className=\"card-body\">\n\n                                        <TableContainer component={Paper}>\n                                            <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Nombre Meta</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Fecha Inicio</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Fecha Final</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Categoria</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Descripcion Meta</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {\n                                                    datosMetas.length>0 ?\n                                                    (datosMetas.map((row, key) => (\n                                                        <TableRow key={key}>\n                                                            <TableCell component=\"rigth\" scope=\"row\">{++key}</TableCell>\n                                                            <TableCell align=\"right\">{row.name_meta}</TableCell>\n                                                            <TableCell align=\"right\">{row.date_inicio}</TableCell>\n                                                            <TableCell align=\"right\">{row.date_final}</TableCell>\n                                                            <TableCell align=\"right\">{row.monto_meta}</TableCell>\n                                                            <TableCell align=\"right\">{row.categorie}</TableCell>\n                                                            <TableCell align=\"right\">{row.descripcion_meta}</TableCell>\n                                                            <TableCell align=\"right\">\n                                                            <Button size=\"small\" onClick ={(id)=>{eliminarMetas(row.id)}} style={{ backgroundColor: '#e53935', color: '#fff' }} >Eliminar</Button>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                     ))):\n                                                    (console.log(' no existe data'))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n\n                                    </div>\n                                    <br></br>\n                                    <Button size=\"small\" variant=\"contained\" className=\"m-3\" color=\"primary\" onClick={handleOpenMetas} >\n                                        Agregar\n                                    </Button>\n                                    <br></br>\n                                    <br></br>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Container>\n            </main>\n\n\n            <Dialog onClose={handleCloseMetas} open={openMetas}>\n                <DialogTitle onClose={handleCloseMetas}>\n                    Registro metas\n                </DialogTitle>\n                <DialogContentText className=\"m-4\" >\n\n                    <TextField\n                        label=\"Nombre meta\"\n                        style={{ width: '100%' }}\n                        placeholder=\"Ingrese el nombre de meta\"\n                        fullWidth\n                        onChange={event => setNameMeta(event.target.value)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n\n                    <TextField\n                        label=\" Descripcion Meta\"\n                        style={{ marginTop: 8, width: '100%' }}\n                        placeholder=\"Ingrese una breve descripcion\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(e) => setDescripcionMeta(e.target.value)}\n                    />\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Fecha Inicio\"\n                        type=\"date\"\n                        style={{ marginTop: 8, width: '100%' }}\n                        defaultValue=\"2017-05-24T10:30\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(e) => setDateInit(e.target.value)}\n                    />\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Fecha Final\"\n                        type=\"date\"\n                        style={{ marginTop: 8, width: '100%' }}\n                        defaultValue=\"2017-05-24T10:30\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(e) => setDateFinal(e.target.value)}\n                    />\n                    <TextField\n                        label=\"Monto de la Meta\"\n                        style={{ marginTop: 8, width: '100%' }}\n                        placeholder=\"Ingrese el monto de la meta\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(e) => setMontoMeta(e.target.value)}\n                    />\n                    <TextField\n                        select\n                        label=\"Seleccione una categoria\"\n                        style={{ width: '100%' }}\n                        defaultValue=\"0\"\n                        onChange={(e) => setTipoCategoria(e.target.value)}\n                    >\n                        <MenuItem key={0} value={\"Null\"}>Seleccione una categoria</MenuItem>\n                        <MenuItem key={1} value={\"Medico\"}>Medicina</MenuItem>\n                        <MenuItem key={2} value={\"Servicios Publicos\"}>Servicios Publicos</MenuItem>\n                        <MenuItem key={3} value={\"Servicios Publicos\"}>Otros</MenuItem>\n                    </TextField>\n\n                </DialogContentText>\n                <DialogActions>\n                    <Button onClick={handleSubmitMetas} color=\"primary\">\n                        Guardar\n                    </Button>\n                    <Button onClick={handleCloseMetas} color=\"secondary\">\n                        Cancelar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            { /* FIN MODAL METAS */}\n        </div>\n    )\n}\n\nexport default MetasPlanes;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Cuentas/Cuentas.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../Configuracion/Configuracion.css\";\nimport Menu from '../../../Components/Menu/Menu';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {auth,database} from '../../../firebaseconf';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\n\nconst API = process.env.REACT_APP_API;\n\nconst Cuentas = () => {\n    const classes = useStyles();\n    //probar \n    const idUsuario = localStorage.getItem(\"Session_id\");\n    const [iduser, setuser] = useState(\"\");\n    const [datosCuentas, setCuentas] = useState([]);\n    const [dataCategoria, setDataCategoria] = useState([]);\n\n    const [tipoCuenta, setTipoCuenta] = useState(\"\");\n    const [nombreBanco, setNombreBanco] = useState(\"\");\n    const [fechaVencimiento, setFechaVencimiento] = useState(\"\");\n    const [csv, setCsv] = useState(\"\");\n    const [numeroCuenta, setNumeroCuenta] = useState(\"\");\n    const [monto, setMonto] = useState(\"\");\n    const [montoPago, setMontoPago] = useState(\"\");\n    const [descripcionPago, setDescripcionPago] = useState(\"\");\n    const [idCuenta, setIdCuenta] = useState(\"\");\n    const [nombrePago,setNombrePago]=useState('');\n    const [categoriaPago,setCategoriaPago]=useState('');\n\n\n    const [openModalPagos, setOpenModalPagos] = useState(false);\n    const [openModalCuentas, setOpenModalCuentas] = useState(false);\n\n    \n    const handleSubmitCuentas = async (e) => {\n        e.preventDefault();\n\n        const json_data = {\n            //id_user : idUsuario,\n            \n            name_bank_account : nombreBanco,\n            date_out: fechaVencimiento,\n            validation_digits: csv,\n            number_account: numeroCuenta,\n            mount: monto,\n            type_bank : tipoCuenta\n        };\n        try{\n            await auth.onAuthStateChanged((z)=>{if(z){\n                database.ref(`/${z.uid}/cuentas/`).push(json_data)\n                .then(setOpenModalCuentas(false))\n                    }})\n               \n            }catch(e){\n               \n                alert(e)\n                }\n    };\n\n    const handleSubmitPagos = async (e) => {\n        e.preventDefault();\n\n        const json_data = {\n            //id_user : idUsuario,\n            nombrePago : nombrePago,\n            descripccion: descripcionPago,\n            monto: montoPago,\n            categoria: categoriaPago\n        };\n        try{\n            await auth.onAuthStateChanged((z)=>{if(z){\n                database.ref(`/${z.uid}/Pagos/`).push(json_data)\n                .then(setOpenModalPagos(false))\n                    }})\n               \n            }catch(e){\n               \n                alert(e)\n                }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Menu>\n                {/**Barra Lateral y Barra Horizontal */}\n            </Menu>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div className=\"content\">\n                        <div className=\"row-perfil\">\n\n                            <div className=\"col-md-6 mt-3\">\n                                <Card >\n                                    <CardMedia\n                                        component=\"img\"\n                                        alt=\"Contemplative Reptile\"\n                                        height=\"140\"\n                                        image=\"https://4.bp.blogspot.com/-ii1IjrLMs1s/VregTG3508I/AAAAAAAAAJo/uWAqXPFoBLI/s1600/calculo-calculadora-cuentas.jpg\"\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            Cuentas\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button onClick={() => setOpenModalCuentas(true)} size=\"small\" variant=\"contained\" color=\"primary\">\n                                            Agregar\n                                        </Button>\n                                        <Link to=\"/listado-cuentas\" >\n                                            <Button size=\"small\" variant=\"contained\" color=\"secondary\">\n                                                Mostrar\n                                            </Button>\n                                        </Link>\n\n                                    </CardActions>\n                                </Card>\n                            </div>\n\n                            <div className=\"col-md-6 mt-3\">\n                                <Card >\n                                    <CardMedia\n                                        component=\"img\"\n                                        alt=\"Contemplative Reptile\"\n                                        height=\"140\"\n                                        image=\"https://blog.cobiscorp.com/hubfs/automatizacionpagos.png\"\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            Pagos\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button onClick={() => setOpenModalPagos(true)} variant=\"contained\" size=\"small\" color=\"primary\">\n                                            Agregar\n                                        </Button>\n                                        <Link to=\"/listado-pagos\" >\n                                            <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n                                                Mostrar\n                                            </Button>\n                                        </Link>\n\n                                    </CardActions>\n                                </Card>\n                            </div>\n\n                            {/* MODAL CUENTAS */}\n                            <div>\n                                <Dialog\n                                    open={openModalCuentas}\n                                    onClose={() => setOpenModalCuentas(false)}\n                                    aria-labelledby=\"alert-dialog-title\"\n                                    aria-describedby=\"alert-dialog-description\"\n                                    style={{ width: '100%' }}\n                                >\n                                    <DialogTitle id=\"alert-dialog-title\">Agregar cuenta</DialogTitle>\n                                    <DialogContent>\n                                        <DialogContentText id=\"alert-dialog-description\">\n                                            <TextField\n                                                select\n                                                label=\"Seleccione\"\n                                                helperText=\"Seleccione una cuenta\"\n                                                style={{ width: 400 }}\n                                                onChange={e => setTipoCuenta(e.target.value)}\n                                            >\n                                                <MenuItem key=\"0\" value=\"NULL\">Seleccione una cuenta</MenuItem>\n                                                <MenuItem key=\"1\" value=\"Debito\">Debito</MenuItem>\n                                                <MenuItem key=\"2\" value=\"Ahorro\">Ahorro</MenuItem>\n                                                <MenuItem key=\"3\" value=\"Credito\">Credito</MenuItem>\n                                            </TextField>\n                                            <div>\n                                                {\n                                                    tipoCuenta == 'Debito' &&\n                                                    <>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Nombre del banco\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                autoComplete=\"Ingrese el nombre del banco\"\n                                                                onChange={(e) => setNombreBanco(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                id=\"datetime-local\"\n                                                                label=\"Fecha vencimiento\"\n                                                                type=\"date\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setFechaVencimiento(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"CSV\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setCsv(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Numero de cuenta\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setNumeroCuenta(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Monto\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setMonto(e.target.value)}\n                                                            />\n                                                        </div>\n                                                    </>\n                                                }\n                                                {\n                                                    tipoCuenta == \"Ahorro\" &&\n                                                    <>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Nombre del banco\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                autoComplete=\"Ingrese el nomre del banco\"\n                                                                onChange={(e) => setNombreBanco(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Fecha vencimiento\"\n                                                                type=\"date\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setFechaVencimiento(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        \n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Numero de cuenta\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setNumeroCuenta(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Monto\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setMonto(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        \n                                                    </>\n                                                }\n                                                {\n                                                    tipoCuenta == \"Credito\" &&\n                                                    <>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Nombre del banco\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                autoComplete=\"Ingrese el nomre del banco\"\n                                                                onChange={(e) => setNombreBanco(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Fecha vencimiento\"\n                                                                type=\"date\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setFechaVencimiento(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"CSV\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setCsv(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Numero de cuenta\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setNumeroCuenta(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <TextField\n                                                                label=\"Monto\"\n                                                                type=\"text\"\n                                                                style={{ width: 400 }}\n                                                                onChange={(e) => setMonto(e.target.value)}\n                                                            />\n                                                        </div>\n                                                        \n                                                    </>\n                                                }\n                                            </div>\n                                        </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={() => setOpenModalCuentas(false)} color=\"primary\">\n                                            Cancelar\n                                        </Button>\n                                        <Button onClick={handleSubmitCuentas} color=\"primary\" autoFocus>\n                                            Agregar\n                                        </Button>\n                                    </DialogActions>\n                                </Dialog>\n                            </div>\n                            {/* FIN MODAL CUENTAS */}\n                            {/* MODAL PAGOS */}\n                            <div>\n                                <Dialog\n                                    open={openModalPagos}\n                                    onClose={() => setOpenModalPagos(false)}\n                                    aria-labelledby=\"alert-dialog-title\"\n                                    aria-describedby=\"alert-dialog-description\"\n                                    style={{ width: '100%' }}\n                                >\n                                    <DialogTitle id=\"alert-dialog-title\">Agregar pagos</DialogTitle>\n                                    <DialogContent>\n                                        <DialogContentText id=\"alert-dialog-description\">\n                                            <div>\n                                                <div className=\"form-group\">\n                                                    <TextField\n                                                        label=\"Nombre Pago\"\n                                                        type=\"text\"\n                                                        style={{ width: 400 }}\n                                                        onChange={e => setNombrePago(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <TextField\n                                                        label=\"Descripcion\"\n                                                        type=\"text\"\n                                                        style={{ width: 400 }}\n                                                        onChange={e => setDescripcionPago(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <TextField\n                                                        label=\"Monto\"\n                                                        type=\"text\"\n                                                        style={{ width: 400 }}\n                                                        onChange={e => setMontoPago(e.target.value)}\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <TextField\n                                                        select\n                                                        label=\"Categoria\"\n                                                        helperText=\"Seleccione una cuenta\"\n                                                        style={{ width: 400 }}\n                                                        onChange={e => setCategoriaPago(e.target.value)}\n                                                    >\n                                                        <MenuItem key=\"0\" value=\"Nullo\">Seleccionar cuenta</MenuItem>\n                                                        <MenuItem key=\"1\" value=\"Medicos\">Medicos</MenuItem>\n                                                        <MenuItem key=\"2\" value=\"Servicios Publicos\">Servicios Publicos</MenuItem>\n                                                        <MenuItem key=\"3\" value=\"Otros\">Otros</MenuItem>\n                                                        \n                                                    </TextField>\n                                                </div>\n                                            </div>\n                                        </DialogContentText>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={() => setOpenModalPagos(false)} color=\"primary\">\n                                            Cancelar\n                                        </Button>\n                                        <Button  onClick={handleSubmitPagos} color=\"primary\" autoFocus>\n                                            Agregar\n                                        </Button>\n                                    </DialogActions>\n                                </Dialog>\n                            </div>\n                            {/* FIN MODAL PAGOS */}\n                        </div>\n                    </div>\n                </Container>\n            </main>\n        </div>\n    )\n}\nexport default Cuentas","/home/ram/proyectowalletfirebase/FrontEnd/src/screens/Ventanas-de-Usuario/Administrador/Administrador.js",["217","218"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n//import \"./Main.css\";\n/*\nimport Grafica from '../Grafica/Grafica';\nimport Cuentas from '../Cuentas/Cuentas';\nimport Estadistica from '../Estadistica/Estadistica';*/\n//import finanzas from '../assets/img/finanzas.jpg';\n\nconst API = process.env.REACT_APP_API;\n\nconst Administrador = () => {\n    \n\n\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [imagen, setImagen] = useState(null);\n    const [contraseña, setContraseña] = useState('');\n    const [contraseñaNueva, setContraseñaNueva] = useState('');\n    const [confirmar, setConfirmar] = useState('');\n    const [last_name, setLastName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nameImage, setNameImage] = useState('')\n    //campos nuevos favor agregar a la base\n    const [direccion, setDireccion] = useState(\"\");\n    const [ciudad, setCiudad] = useState(\"\");\n    const [pais, setPais] = useState(\"\");\n    const [codigoPostal, setCodigoPostal] = useState(\"\");\n    const [descripccion, setDescripccion] = useState(\"\");\n    const [telefono,setTelefono]=useState(\"\");\n    /*falta implementacion dinamica en imput*/\n    const handleSubmitActualizar = async (e) => {\n        e.preventDefault();\n\n        const json_data = {\n            'email': email,\n            'name': name,\n            'last_name': last_name,\n            'password': password,\n            'direccion': direccion,\n            'ciudad': ciudad,\n            'pais': pais,\n            'codigoPostal': codigoPostal,\n            'descripcion': descripccion\n        }\n\n        const res = await fetch(`${API}/`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(json_data),\n        });\n\n        const data = await res.json();\n        console.log(data)\n        //crear condicion y sustituir valores en BD\n    };\n\n\n    const handelSutmitImagen = (e) => {\n        let imagen = e.target.files[0];\n        setImagen(imagen);\n        setNameImage(imagen.name);\n    }\n\n    const openDialogoImagen = () => {\n        document.getElementById('input-img-perfil').click();\n    }\n\n    const actualizarContrasena = () =>{\n        if (contraseñaNueva !== confirmar) {\n            console.log('NO hacer la peticion');\n        } else {\n            console.log('hacer la peticion');\n\n            let data = {\n                contraseña,\n                confirmar,\n                contraseñaNueva\n            }\n            console.log(data)\n        }\n    }\n    //foto,name, apellido, descripcion, balance\n\n    const actualizarInformacion = () =>{\n            let data = {\n                email,\n                name,\n                last_name,\n                direccion,\n                ciudad,\n                pais,\n                telefono,\n                descripccion,\n                codigoPostal\n            }\n            console.log(data)\n    }\n\n    const cerrarSesion = async (e) => {\n        e.preventDefault();\n\n        localStorage.clear();\n        window.location.href = \"http://localhost:3000/login\";\n    }\n    \n    return (\n        <div className=\"login-page\" style={{ height: '100vh' }} >\n            <header className=\"barra-lateral\">\n                <div className=\"d-flex flex-column\">\n\n                    <div className=\"profile\">\n                        {/*<img src=\"assets/img/profile-img.jpg\" alt=\"\" class=\"img-fluid rounded-circle\">*/}\n                        <img src={imagen} className=\"span-img-profile rounded-circle img-fluid\" alt=\"\" />\n                        <h1 className=\"text-light\"><Link to=\"/main/grafica\" className=\"navbar-a-header-pro\"></Link></h1>\n                        <div className=\"social-links mt-3 text-center\">\n                            <Link to=\"/\" className=\"\"><i className=\"bx bxl-twitter\"></i></Link>\n                            <Link to=\"/\" className=\"\"><i className=\"bx bxl-facebook\"></i></Link>\n                            <Link to=\"/\" className=\"\"><i className=\"bx bxl-instagram\"></i></Link>\n                        </div>\n                    </div>\n                    {/*<!-- .nav-menu -->*/}\n                    <nav className=\"navbar nav-menu navbar\">\n                        <ul>\n                            <li><Link to=\"/gestion-usuarios\" className=\"nav-link scrollto active\"><FontAwesomeIcon icon={['fa', 'home']} size=\"2x\" /><span className=\"m-2\" >Gestion Usuario</span></Link></li>\n                            <li><Link to=\"/bitacora\" className=\"nav-link scrollto active\"><FontAwesomeIcon icon={['fa', 'home']} size=\"2x\" /><span className=\"m-2\" >Bitacora</span></Link></li>\n                            <li><Link to=\"/cuentas-por-aprobar\" className=\"nav-link scrollto active\"><FontAwesomeIcon icon={['fa', 'home']} size=\"2x\" /><span className=\"m-2\" >Cuentas por aprobar</span></Link></li>\n                            <li><Link to=\"/Administrador\" className=\"nav-link scrollto active\"><FontAwesomeIcon icon={['fa', 'tools']} size=\"2x\" /><span className=\"m-2\" >Configuracion</span></Link></li>\n                            <li><Link to=\"\" className=\"nav-link scrollto active\"><FontAwesomeIcon icon={['fa', 'door-open']} size=\"2x\" onClick={cerrarSesion}/><span>Cerrar Sesion</span></Link></li>\n                        </ul>\n                    </nav>{/*<!-- .nav-menu -->*/}\n                </div>\n            </header>\n\n            <main className=\"main-main\">\n                    <div className=\"panel-header panel-header-sm\"></div>\n                    <div className=\"content\">\n                        <div className=\"row-perfil\">\n                            <div className=\"col-md-8\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h5 className=\"title\">Configuracion Perfil</h5>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <form>\n                                            <div className=\"row-perfil\">\n                                                <div className=\"pr-1 col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Imagen perfil</label>\n                                                        <input onChange={handelSutmitImagen} className=\"d-none\" type=\"file\" id=\"input-img-perfil\" />\n                                                        <input disabled=\"\" placeholder=\"img\" type=\"text\" className=\"form-control d-none\"></input>\n                                                        <div className=\"alert subir-img\" role=\"alert\" onClick={openDialogoImagen} >\n                                                            <p className=\"text-dark text-sm\" >\n                                                                <span>\n                                                                    <img height=\"25px\" width=\"25px\" src=\"https://png.pngtree.com/png-clipart/20190903/original/pngtree-file-icon-png-image_4419863.jpg\" alt=\"\"/>\n                                                                </span> {nameImage.trim() === 0 ? 'Haz click para subir la imagen' : nameImage}\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"pl-1 col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Correo Electronico</label>\n                                                        <input placeholder=\"Correo Electronico\" type=\"email\" className=\"form-control\"></input>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"pr-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Nombre</label>\n                                                        <input placeholder=\"Nombre\" type=\"text\" className=\"form-control\" ></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pl-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Apellido</label>\n                                                        <input placeholder=\"Apellido\" type=\"text\" className=\"form-control\"></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pl-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Contraseña</label>\n                                                        <input placeholder=\"Contraseña\" type=\"password\" className=\"d-none form-control\"></input>\n                                                        <button type=\"button\" className=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                                                            Actualiza contraseña\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Direccion</label>\n                                                        <input placeholder=\"Direccion\" type=\"text\" className=\"form-control\" ></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-group\">\n                                                        <label>Telefono</label>\n                                                        <input placeholder=\"Numero de telefono\" type=\"text\" className=\"form-control\"></input>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"pr-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Ciudad</label>\n                                                        <input placeholder=\"Ciudad\" type=\"text\" className=\"form-control\" ></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"px-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Pais</label>\n                                                        <input placeholder=\"Pais\" type=\"text\" className=\"form-control\" ></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"pl-1 col-md-4\">\n                                                    <div className=\"form-group\">\n                                                        <label>Codigo Postal</label>\n                                                        <input placeholder=\"Codigo Postal\" type=\"number\" className=\"form-control\" ></input>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <div className=\"form-group\">\n                                                        <label>Sobre Mi</label>\n                                                        <textarea cols=\"80\" placeholder=\"Descripcion de perfil\" rows=\"4\" className=\"form-control\" >\n                                                        </textarea>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"text-center\">\n                                                <button type=\"button\" className=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#actualizar\">\n                                                            Actualiza Perfil\n                                                        </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-4\">\n                                <div className=\"card-user card\">\n                                    {/*}\n                                <div className=\"image\">\n                                    <img className=\"img-fondo\" src=\"\"></img>\n                                </div>\n                                */}\n                                    <div className=\"card-body\">\n                                        <div className=\"author\">\n                                            <Link to=\"\" className=\"usuario-config\">\n                                                <img alt=\"...\" className=\"avatar border-gray\" src={imagen}></img>\n                                                <h5 className=\"title\">{} {}</h5>\n                                            </Link>\n                                        </div>\n                                        <p></p>\n                                        <p className=\"description text-center\">\n                                            {}\n                                        </p>\n\n\n                                        <p className=\"description text-center\">Balance:</p>\n                                        <p className=\"description text-center\">{}</p>\n                                    </div>\n\n                                    <hr></hr>\n                                    {/**\n                                <div className=\"button-container\">\n                                    <a href=\"#pablo\" className=\"btn-neutral btn-icon btn-round btn btn-default btn-lg\">\n                                        <i className=\"fab fa-facebook-f\"></i>\n                                    </a>\n                                    <a href=\"#pablo\" className=\"btn-neutral btn-icon btn-round btn btn-default btn-lg\">\n                                        <i className=\"fab fa-twitter\"></i>\n                                    </a>\n                                    <a href=\"#pablo\" className=\"btn-neutral btn-icon btn-round btn btn-default btn-lg\">\n                                        <i className=\"fab fa-google-plus-g\"></i>\n                                    </a>\n                                </div>\n                                \n */}\n\n                                    <div>\n                                        {/* Button trigger modal */}\n\n                                        {/* Modal */}\n                                        <div className=\"modal fade\" id=\"exampleModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div className=\"modal-dialog\" role=\"document\">\n                                                <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Actualizar contraseña</h5>\n                                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                            <span aria-hidden=\"true\">×</span>\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <div className=\"form-group\">\n                                                            <label>Contraseña anterior</label>\n                                                            <input placeholder=\"Contraseña Actual\" onChange={(e) => setContraseña(e.target.value)} type=\"password\" className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Contraseña nueva</label>\n                                                            <input placeholder=\"Nueva contraseña\" onChange={(e) => setContraseñaNueva(e.target.value)} type=\"password\"  className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Confirmar Contraseña</label>\n                                                            <input placeholder=\"Confirme contraseña\" onChange={(e) => setConfirmar(e.target.value)} type=\"password\"  className=\"form-control\"></input>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n                                                        <button type=\"button\" onClick={actualizarContrasena} className=\"btn btn-sm btn-primary\">Actualizar</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* Modal para actualizar*/}\n                                        <div className=\"modal fade\" id=\"actualizar\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div className=\"modal-dialog\" role=\"document\">\n                                                <div className=\"modal-content\">\n                                                    <div className=\"modal-header\">\n                                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Actualizar contraseña</h5>\n                                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                            <span aria-hidden=\"true\">×</span>\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"modal-body\">\n                                                        <div className=\"form-group\">\n                                                            <label>Correo</label>\n                                                            <input placeholder=\"Correo electronico\" onChange={(e) => setEmail(e.target.value)} type=\"email\" className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Nombre</label>\n                                                            <input placeholder=\"Nombre\" onChange={(e) => setName(e.target.value)} type=\"text\"  className=\"form-control\" ></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Apellido</label>\n                                                            <input placeholder=\"Apellido\" onChange={(e) => setLastName(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Direccion</label>\n                                                            <input placeholder=\"Direccion\" onChange={(e) => setDireccion(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"form-group\">\n                                                                <label>Ciudad</label>\n                                                                <input placeholder=\"Ciudad\" onChange={(e) => setCiudad(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                <label>Pais</label>\n                                                                <input placeholder=\"Pais\" onChange={(e) => setPais(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                <label>Codigo postal</label>\n                                                                <input placeholder=\"codigo postal\" onChange={(e) => setCodigoPostal(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                            <label>Telefono</label>\n                                                            <input placeholder=\"Telefono\" onChange={(e) => setTelefono(e.target.value)} type=\"text\"  className=\"form-control\"></input>\n                                                        </div>\n                                                        </div>\n                                                        <div className=\"form-group\">\n                                                            <label>Descripcion de Perfil</label>\n                                                            <textarea cols=\"80\" placeholder=\"Descripcion de perfil\" rows=\"4\" className=\"form-control\" onChange={(e) => setDescripccion(e.target.value)}></textarea>\n                                                        </div>                                                        \n                                                    </div>\n                                                    <div className=\"modal-footer\">\n                                                        <button type=\"button\" className=\"btn btn-sm btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n                                                        <button type=\"button\" onClick={actualizarInformacion} className=\"btn btn-sm btn-primary\">Actualizar</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n        </div>\n    )\n}\nexport default Administrador;\n","/home/ram/proyectowalletfirebase/FrontEnd/src/firebaseconf.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/fontawesome/fontawesome.js",[],"/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Chart/chart.jsx",["219"],"import React from 'react';\n//import { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis,CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Title from '../Title/title';\n\nexport default function Chart(props) {\n\n  return (\n    <React.Fragment>\n      <Title>{props.title}</Title>\n      {props.title==\"Pagos Realizados\" ? \n      ( <LineChart width={730} height={250} data={props.data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n       <XAxis dataKey=\"categoria\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n         <Line type=\"monotone\" dataKey=\"monto\" stroke=\"#8884d8\" />\n         <Line type=\"monotone\" dataKey=\"categoria\" stroke=\"#8884d8\" />\n         </LineChart>):\n         ( <LineChart width={730} height={250} data={props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n         <XAxis dataKey=\"name_bank_account\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n           <Line type=\"monotone\" dataKey=\"mount\" stroke=\"#8884d8\" />\n           <Line type=\"monotone\" dataKey=\"number_account\" stroke=\"#8884d8\" />\n           </LineChart>)}\n       \n    </React.Fragment>\n  );\n}\n","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Deposits/deposits.jsx",["220","221","222","223","224","225","226"],"import React, {useEffect,useState}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Fragment } from 'react';\nimport {auth,database} from '../../firebaseconf';\n\nconst UseStyles = makeStyles({\n  root: {\n    minWidth: 245,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Deposits(props) {\n  const classes = UseStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {props.title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {props.title==\"Porcentaje Gastos\"?\n          (props.money>0 ?(<h5>Porcentaje Gasto: {props.money}%</h5>):(<h5>Porcentaje Gasto: 0 %</h5>))\n          :\n          (<h5>Total: L.{props.money}</h5>)}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Este es el resumen de:\n          <br />\n          {props.title}\n        </Typography>\n\n      </CardContent>\n      \n    </Card>\n    </React.Fragment>\n  );\n}\n","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Menu/Menu.jsx",["227","228","229","230","231","232","233","234"],"/home/ram/proyectowalletfirebase/FrontEnd/src/Components/MovList/movlist.jsx",["235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { useState, useEffect } from 'react';\n//import Link from '@material-ui/core/Link';\nimport { Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../Title/title';\nimport Button from '@material-ui/core/Button';\nimport { auth,database } from '../../firebaseconf';\n\n\nconst API = process.env.REACT_APP_API;\nconst idUsuario = localStorage.getItem(\"idUsuario\");\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst UseStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Movlist() {\n  const session_id = localStorage.getItem(\"Session_id\");\n  const classes = UseStyles();\n  const [movimientos, setMovimientos]=useState([]);\n  const [datosCuentas, setCuentas] = useState({});\n  let suma=0.0;\n  const [sumaCuentas,setsuma]=useState(0);\n  const [datosPagos, setPagos] = useState({});\n\n  const styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n  const obtenerCuentas = async () => {\n    await auth.onAuthStateChanged((z)=>{if(z){\n        const data= async()=>{\n            await database.ref().child(z.uid).child('cuentas').on('value',(e)=>{\n            const todo=[];\n            const da= e.forEach(element => {\n                todo.push(element.val())\n            });\n            if(todo.length>0){\n                setCuentas(todo);\n              }   \n        })}\n        data();\n    }else{\n        alert(\"error\")\n    }})\n        }\n\n\n        const obtenerPagos = async () => {\n          await auth.onAuthStateChanged((z)=>{if(z){\n              const data= async()=>{\n                  await database.ref().child(z.uid).child('Pagos').on('value',(e)=>{\n                  const todo=[];\n                  const da= e.forEach(element => {\n                      todo.push(element.val())\n                  });\n                  if(todo.length>0){\n                      setPagos(todo);\n                    }   \n              })}\n              data();\n          }else{\n              alert(\"error\")\n          }})\n              }\n\n  useEffect(() => {\n    obtenerCuentas();\n    obtenerPagos();\n  }, [])\n\n\n  return (\n    <React.Fragment>\n      <Title align=\"center\">Cuentas de Usuario</Title>\n      <Table size=\"small\">\n      <TableHead>\n             <TableRow>\n                 <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Nombre del banco</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Numero Cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Tipo cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                  </TableRow>\n              </TableHead>\n        <TableBody>\n        {\n            datosCuentas.length>0 ?\n            (datosCuentas.map((row, key) => (\n              <TableRow key={key}>\n                           <TableCell  align=\"right\">{++key}</TableCell>\n                           <TableCell align=\"right\">{row.name_bank_account}</TableCell>\n                           <TableCell align=\"right\">{row.number_account}</TableCell>\n                            <TableCell align=\"right\">{row.type_bank}</TableCell>\n                            <TableCell align=\"right\">{row.mount}</TableCell>\n                            <TableCell align=\"right\">\n                            </TableCell>\n                </TableRow>\n                              ))):\n            (console.log(' no existe data'))}\n        </TableBody>\n      </Table>\n      <Title align=\"center\"></Title>\n      <br></br><br></br><br></br>\n      <Title align=\"center\">Pagos Realizados</Title>\n      <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Nombre</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Categoria</TableCell>\n                                                        <TableCell color=\"primary\" align=\"right\">Descripcion</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {\n                                                    datosPagos.length>0 ?\n                                                    (datosPagos.map((row, key) => (\n                                                        <TableRow key={key}>\n                                                            <TableCell align=\"right\">{++key}</TableCell>\n                                                            <TableCell align=\"right\">{row.nombrePago}</TableCell>\n                                                            <TableCell align=\"right\">{row.monto}</TableCell>\n                                                            <TableCell align=\"right\">{row.categoria}</TableCell>\n                                                            <TableCell align=\"right\">{row.descripccion}</TableCell>\n                                                            <TableCell align=\"right\">\n                                                            </TableCell>\n                                                        </TableRow>\n                                                     ))):\n                                                    (console.log(' no existe data'))}\n                                                </TableBody>\n                          \n                                            </Table>\n                                            <br></br><br></br><br></br>\n                                            <Link to='/cuentas'>\n                                                    <p>Ir a crear cuentas y pagos nuevos</p>\n                                                </Link>\n      \n      \n      <div className={classes.seeMore}>\n      </div>\n    </React.Fragment>\n  );\n}\n","/home/ram/proyectowalletfirebase/FrontEnd/src/Components/Title/title.jsx",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":24},{"ruleId":"251","severity":1,"message":"255","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":16},{"ruleId":"251","severity":1,"message":"256","line":44,"column":12,"nodeType":"253","messageId":"254","endLine":44,"endColumn":17},{"ruleId":"257","severity":1,"message":"258","line":58,"column":28,"nodeType":"259","messageId":"260","endLine":58,"endColumn":30},{"ruleId":"257","severity":1,"message":"258","line":58,"column":52,"nodeType":"259","messageId":"260","endLine":58,"endColumn":54},{"ruleId":"257","severity":1,"message":"258","line":58,"column":76,"nodeType":"259","messageId":"260","endLine":58,"endColumn":78},{"ruleId":"257","severity":1,"message":"258","line":58,"column":100,"nodeType":"259","messageId":"260","endLine":58,"endColumn":102},{"ruleId":"257","severity":1,"message":"258","line":80,"column":25,"nodeType":"259","messageId":"260","endLine":80,"endColumn":27},{"ruleId":"251","severity":1,"message":"261","line":55,"column":15,"nodeType":"253","messageId":"254","endLine":55,"endColumn":19},{"ruleId":"251","severity":1,"message":"262","line":10,"column":7,"nodeType":"253","messageId":"254","endLine":10,"endColumn":10},{"ruleId":"251","severity":1,"message":"263","line":93,"column":11,"nodeType":"253","messageId":"254","endLine":93,"endColumn":20},{"ruleId":"251","severity":1,"message":"261","line":94,"column":12,"nodeType":"253","messageId":"254","endLine":94,"endColumn":16},{"ruleId":"251","severity":1,"message":"264","line":94,"column":18,"nodeType":"253","messageId":"254","endLine":94,"endColumn":25},{"ruleId":"251","severity":1,"message":"265","line":103,"column":21,"nodeType":"253","messageId":"254","endLine":103,"endColumn":23},{"ruleId":"251","severity":1,"message":"265","line":121,"column":27,"nodeType":"253","messageId":"254","endLine":121,"endColumn":29},{"ruleId":"251","severity":1,"message":"266","line":3,"column":11,"nodeType":"253","messageId":"254","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"267","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":30},{"ruleId":"251","severity":1,"message":"262","line":20,"column":7,"nodeType":"253","messageId":"254","endLine":20,"endColumn":10},{"ruleId":"251","severity":1,"message":"268","line":61,"column":11,"nodeType":"253","messageId":"254","endLine":61,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":66,"column":26,"nodeType":"259","messageId":"260","endLine":66,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":66,"column":51,"nodeType":"259","messageId":"260","endLine":66,"endColumn":53},{"ruleId":"257","severity":1,"message":"258","line":66,"column":72,"nodeType":"259","messageId":"260","endLine":66,"endColumn":74},{"ruleId":"257","severity":1,"message":"258","line":66,"column":99,"nodeType":"259","messageId":"260","endLine":66,"endColumn":101},{"ruleId":"257","severity":1,"message":"258","line":81,"column":17,"nodeType":"259","messageId":"260","endLine":81,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":84,"column":19,"nodeType":"259","messageId":"260","endLine":84,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":87,"column":21,"nodeType":"259","messageId":"260","endLine":87,"endColumn":23},{"ruleId":"251","severity":1,"message":"262","line":15,"column":7,"nodeType":"253","messageId":"254","endLine":15,"endColumn":10},{"ruleId":"251","severity":1,"message":"269","line":113,"column":10,"nodeType":"253","messageId":"254","endLine":113,"endColumn":21},{"ruleId":"251","severity":1,"message":"270","line":113,"column":23,"nodeType":"253","messageId":"254","endLine":113,"endColumn":37},{"ruleId":"251","severity":1,"message":"271","line":114,"column":9,"nodeType":"253","messageId":"254","endLine":114,"endColumn":19},{"ruleId":"251","severity":1,"message":"272","line":115,"column":10,"nodeType":"253","messageId":"254","endLine":115,"endColumn":22},{"ruleId":"251","severity":1,"message":"273","line":115,"column":24,"nodeType":"253","messageId":"254","endLine":115,"endColumn":34},{"ruleId":"251","severity":1,"message":"274","line":117,"column":10,"nodeType":"253","messageId":"254","endLine":117,"endColumn":20},{"ruleId":"251","severity":1,"message":"275","line":117,"column":22,"nodeType":"253","messageId":"254","endLine":117,"endColumn":30},{"ruleId":"251","severity":1,"message":"262","line":18,"column":7,"nodeType":"253","messageId":"254","endLine":18,"endColumn":10},{"ruleId":"251","severity":1,"message":"276","line":101,"column":12,"nodeType":"253","messageId":"254","endLine":101,"endColumn":18},{"ruleId":"251","severity":1,"message":"277","line":101,"column":20,"nodeType":"253","messageId":"254","endLine":101,"endColumn":27},{"ruleId":"251","severity":1,"message":"263","line":105,"column":11,"nodeType":"253","messageId":"254","endLine":105,"endColumn":20},{"ruleId":"251","severity":1,"message":"278","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"279","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":24},{"ruleId":"251","severity":1,"message":"280","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":14},{"ruleId":"251","severity":1,"message":"268","line":57,"column":9,"nodeType":"253","messageId":"254","endLine":57,"endColumn":16},{"ruleId":"251","severity":1,"message":"281","line":64,"column":10,"nodeType":"253","messageId":"254","endLine":64,"endColumn":14},{"ruleId":"251","severity":1,"message":"282","line":64,"column":15,"nodeType":"253","messageId":"254","endLine":64,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":69,"column":26,"nodeType":"259","messageId":"260","endLine":69,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":69,"column":51,"nodeType":"259","messageId":"260","endLine":69,"endColumn":53},{"ruleId":"257","severity":1,"message":"258","line":91,"column":19,"nodeType":"259","messageId":"260","endLine":91,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":94,"column":21,"nodeType":"259","messageId":"260","endLine":94,"endColumn":23},{"ruleId":"251","severity":1,"message":"262","line":19,"column":7,"nodeType":"253","messageId":"254","endLine":19,"endColumn":10},{"ruleId":"251","severity":1,"message":"263","line":108,"column":11,"nodeType":"253","messageId":"254","endLine":108,"endColumn":20},{"ruleId":"251","severity":1,"message":"283","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":19},{"ruleId":"251","severity":1,"message":"284","line":101,"column":12,"nodeType":"253","messageId":"254","endLine":101,"endColumn":18},{"ruleId":"251","severity":1,"message":"285","line":101,"column":20,"nodeType":"253","messageId":"254","endLine":101,"endColumn":29},{"ruleId":"251","severity":1,"message":"286","line":106,"column":22,"nodeType":"253","messageId":"254","endLine":106,"endColumn":33},{"ruleId":"251","severity":1,"message":"287","line":107,"column":23,"nodeType":"253","messageId":"254","endLine":107,"endColumn":35},{"ruleId":"251","severity":1,"message":"288","line":115,"column":12,"nodeType":"253","messageId":"254","endLine":115,"endColumn":21},{"ruleId":"251","severity":1,"message":"289","line":115,"column":23,"nodeType":"253","messageId":"254","endLine":115,"endColumn":34},{"ruleId":"251","severity":1,"message":"290","line":116,"column":12,"nodeType":"253","messageId":"254","endLine":116,"endColumn":18},{"ruleId":"251","severity":1,"message":"291","line":116,"column":20,"nodeType":"253","messageId":"254","endLine":116,"endColumn":29},{"ruleId":"251","severity":1,"message":"292","line":118,"column":11,"nodeType":"253","messageId":"254","endLine":118,"endColumn":33},{"ruleId":"251","severity":1,"message":"293","line":262,"column":11,"nodeType":"253","messageId":"254","endLine":262,"endColumn":23},{"ruleId":"294","severity":1,"message":"295","line":292,"column":69,"nodeType":"296","endLine":292,"endColumn":203},{"ruleId":"257","severity":1,"message":"258","line":293,"column":91,"nodeType":"259","messageId":"260","endLine":293,"endColumn":93},{"ruleId":"251","severity":1,"message":"297","line":26,"column":29,"nodeType":"253","messageId":"254","endLine":26,"endColumn":34},{"ruleId":"251","severity":1,"message":"276","line":110,"column":12,"nodeType":"253","messageId":"254","endLine":110,"endColumn":18},{"ruleId":"251","severity":1,"message":"277","line":110,"column":20,"nodeType":"253","messageId":"254","endLine":110,"endColumn":27},{"ruleId":"251","severity":1,"message":"298","line":114,"column":12,"nodeType":"253","messageId":"254","endLine":114,"endColumn":25},{"ruleId":"251","severity":1,"message":"299","line":114,"column":27,"nodeType":"253","messageId":"254","endLine":114,"endColumn":43},{"ruleId":"251","severity":1,"message":"272","line":115,"column":12,"nodeType":"253","messageId":"254","endLine":115,"endColumn":24},{"ruleId":"251","severity":1,"message":"273","line":115,"column":26,"nodeType":"253","messageId":"254","endLine":115,"endColumn":36},{"ruleId":"251","severity":1,"message":"263","line":117,"column":11,"nodeType":"253","messageId":"254","endLine":117,"endColumn":20},{"ruleId":"251","severity":1,"message":"300","line":120,"column":11,"nodeType":"253","messageId":"254","endLine":120,"endColumn":20},{"ruleId":"251","severity":1,"message":"301","line":126,"column":12,"nodeType":"253","messageId":"254","endLine":126,"endColumn":22},{"ruleId":"251","severity":1,"message":"302","line":126,"column":24,"nodeType":"253","messageId":"254","endLine":126,"endColumn":37},{"ruleId":"251","severity":1,"message":"303","line":185,"column":11,"nodeType":"253","messageId":"254","endLine":185,"endColumn":24},{"ruleId":"251","severity":1,"message":"304","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"262","line":102,"column":7,"nodeType":"253","messageId":"254","endLine":102,"endColumn":10},{"ruleId":"251","severity":1,"message":"263","line":107,"column":11,"nodeType":"253","messageId":"254","endLine":107,"endColumn":20},{"ruleId":"251","severity":1,"message":"276","line":108,"column":12,"nodeType":"253","messageId":"254","endLine":108,"endColumn":18},{"ruleId":"251","severity":1,"message":"277","line":108,"column":20,"nodeType":"253","messageId":"254","endLine":108,"endColumn":27},{"ruleId":"251","severity":1,"message":"272","line":109,"column":12,"nodeType":"253","messageId":"254","endLine":109,"endColumn":24},{"ruleId":"251","severity":1,"message":"273","line":109,"column":26,"nodeType":"253","messageId":"254","endLine":109,"endColumn":36},{"ruleId":"251","severity":1,"message":"298","line":110,"column":12,"nodeType":"253","messageId":"254","endLine":110,"endColumn":25},{"ruleId":"251","severity":1,"message":"299","line":110,"column":27,"nodeType":"253","messageId":"254","endLine":110,"endColumn":43},{"ruleId":"251","severity":1,"message":"305","line":120,"column":12,"nodeType":"253","messageId":"254","endLine":120,"endColumn":20},{"ruleId":"251","severity":1,"message":"306","line":120,"column":22,"nodeType":"253","messageId":"254","endLine":120,"endColumn":33},{"ruleId":"257","severity":1,"message":"258","line":269,"column":64,"nodeType":"259","messageId":"260","endLine":269,"endColumn":66},{"ruleId":"257","severity":1,"message":"258","line":316,"column":64,"nodeType":"259","messageId":"260","endLine":316,"endColumn":66},{"ruleId":"257","severity":1,"message":"258","line":356,"column":64,"nodeType":"259","messageId":"260","endLine":356,"endColumn":66},{"ruleId":"251","severity":1,"message":"286","line":24,"column":22,"nodeType":"253","messageId":"254","endLine":24,"endColumn":33},{"ruleId":"251","severity":1,"message":"292","line":34,"column":11,"nodeType":"253","messageId":"254","endLine":34,"endColumn":33},{"ruleId":"257","severity":1,"message":"258","line":11,"column":19,"nodeType":"259","messageId":"260","endLine":11,"endColumn":21},{"ruleId":"251","severity":1,"message":"304","line":1,"column":16,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"307","line":1,"column":26,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"251","severity":1,"message":"308","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":18},{"ruleId":"251","severity":1,"message":"309","line":7,"column":9,"nodeType":"253","messageId":"254","endLine":7,"endColumn":13},{"ruleId":"251","severity":1,"message":"310","line":7,"column":14,"nodeType":"253","messageId":"254","endLine":7,"endColumn":22},{"ruleId":"251","severity":1,"message":"311","line":28,"column":9,"nodeType":"253","messageId":"254","endLine":28,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":41,"column":23,"nodeType":"259","messageId":"260","endLine":41,"endColumn":25},{"ruleId":"251","severity":1,"message":"312","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":20},{"ruleId":"251","severity":1,"message":"313","line":29,"column":16,"nodeType":"253","messageId":"254","endLine":29,"endColumn":18},{"ruleId":"251","severity":1,"message":"314","line":113,"column":10,"nodeType":"253","messageId":"254","endLine":113,"endColumn":18},{"ruleId":"251","severity":1,"message":"315","line":114,"column":10,"nodeType":"253","messageId":"254","endLine":114,"endColumn":18},{"ruleId":"251","severity":1,"message":"316","line":114,"column":20,"nodeType":"253","messageId":"254","endLine":114,"endColumn":31},{"ruleId":"251","severity":1,"message":"317","line":116,"column":10,"nodeType":"253","messageId":"254","endLine":116,"endColumn":18},{"ruleId":"251","severity":1,"message":"318","line":116,"column":20,"nodeType":"253","messageId":"254","endLine":116,"endColumn":31},{"ruleId":"251","severity":1,"message":"319","line":118,"column":9,"nodeType":"253","messageId":"254","endLine":118,"endColumn":20},{"ruleId":"251","severity":1,"message":"320","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":14},{"ruleId":"251","severity":1,"message":"262","line":15,"column":7,"nodeType":"253","messageId":"254","endLine":15,"endColumn":10},{"ruleId":"251","severity":1,"message":"263","line":16,"column":7,"nodeType":"253","messageId":"254","endLine":16,"endColumn":16},{"ruleId":"251","severity":1,"message":"321","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":24},{"ruleId":"251","severity":1,"message":"271","line":29,"column":9,"nodeType":"253","messageId":"254","endLine":29,"endColumn":19},{"ruleId":"251","severity":1,"message":"322","line":31,"column":10,"nodeType":"253","messageId":"254","endLine":31,"endColumn":21},{"ruleId":"251","severity":1,"message":"323","line":31,"column":23,"nodeType":"253","messageId":"254","endLine":31,"endColumn":37},{"ruleId":"251","severity":1,"message":"324","line":33,"column":7,"nodeType":"253","messageId":"254","endLine":33,"endColumn":11},{"ruleId":"251","severity":1,"message":"325","line":34,"column":10,"nodeType":"253","messageId":"254","endLine":34,"endColumn":21},{"ruleId":"251","severity":1,"message":"326","line":34,"column":22,"nodeType":"253","messageId":"254","endLine":34,"endColumn":29},{"ruleId":"251","severity":1,"message":"265","line":63,"column":19,"nodeType":"253","messageId":"254","endLine":63,"endColumn":21},{"ruleId":"251","severity":1,"message":"265","line":82,"column":25,"nodeType":"253","messageId":"254","endLine":82,"endColumn":27},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'API' is assigned a value but never used.","'idUsuario' is assigned a value but never used.","'setData' is assigned a value but never used.","'da' is assigned a value but never used.","'Redirect' is defined but never used.","'LaptopWindowsRounded' is defined but never used.","'history' is assigned a value but never used.","'informacion' is assigned a value but never used.","'setInformacion' is assigned a value but never used.","'session_id' is assigned a value but never used.","'datosCuentas' is assigned a value but never used.","'setCuentas' is assigned a value but never used.","'datosPagos' is assigned a value but never used.","'setPagos' is assigned a value but never used.","'iduser' is assigned a value but never used.","'setuser' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Mail' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'FilledInput' is defined but never used.","'imagen' is assigned a value but never used.","'setImagen' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setNameImage' is assigned a value but never used.","'urlImagen' is assigned a value but never used.","'setUrlImage' is assigned a value but never used.","'editar' is assigned a value but never used.","'setEditar' is assigned a value but never used.","'handleSubmitActualizar' is assigned a value but never used.","'cerrarSesion' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Modal' is defined but never used.","'dataCategoria' is assigned a value but never used.","'setDataCategoria' is assigned a value but never used.","'inputMeta' is assigned a value but never used.","'tipoCuenta' is assigned a value but never used.","'setTipoCuenta' is assigned a value but never used.","'DialogContent' is assigned a value but never used.","'useEffect' is defined but never used.","'idCuenta' is assigned a value but never used.","'setIdCuenta' is assigned a value but never used.","'useState' is defined but never used.","'Fragment' is defined but never used.","'auth' is defined but never used.","'database' is defined but never used.","'bull' is assigned a value but never used.","'withStyles' is defined but never used.","'db' is defined but never used.","'anchorEl' is assigned a value but never used.","'openMenu' is assigned a value but never used.","'setopenMenu' is assigned a value but never used.","'avatares' is assigned a value but never used.","'setAvatares' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'Button' is defined but never used.","'preventDefault' is defined but never used.","'movimientos' is assigned a value but never used.","'setMovimientos' is assigned a value but never used.","'suma' is assigned a value but never used.","'sumaCuentas' is assigned a value but never used.","'setsuma' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]