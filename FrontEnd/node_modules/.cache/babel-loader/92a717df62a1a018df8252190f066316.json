{"ast":null,"code":"var _jsxFileName = \"/home/ram/proyectowalletfirebase/FrontEnd/src/Components/MovList/movlist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import Link from '@material-ui/core/Link';\n\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../Title/title';\nimport { auth, database } from '../../firebaseconf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API;\nconst idUsuario = localStorage.getItem(\"idUsuario\");\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst UseStyles = makeStyles(_c = theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\n_c2 = UseStyles;\nexport default function Movlist() {\n  _s();\n\n  const session_id = localStorage.getItem(\"Session_id\");\n  const classes = UseStyles();\n  const [movimientos, setMovimientos] = useState([]);\n  const [datosCuentas, setCuentas] = useState({});\n  let suma = 0.0;\n  const [sumaCuentas, setsuma] = useState(0);\n  const [datosPagos, setPagos] = useState({});\n\n  const styles = theme => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 400\n    },\n    table: {\n      minWidth: 650\n    }\n  });\n\n  const obtenerCuentas = async () => {\n    await auth.onAuthStateChanged(z => {\n      if (z) {\n        const data = async () => {\n          await database.ref().child(z.uid).child('cuentas').on('value', e => {\n            const todo = [];\n            const da = e.forEach(element => {\n              todo.push(element.val());\n            });\n\n            if (todo.length > 0) {\n              setCuentas(todo);\n            }\n          });\n        };\n\n        data();\n      } else {\n        alert(\"error\");\n      }\n    });\n  };\n\n  const obtenerPagos = async () => {\n    await auth.onAuthStateChanged(z => {\n      if (z) {\n        const data = async () => {\n          await database.ref().child(z.uid).child('Pagos').on('value', e => {\n            const todo = [];\n            const da = e.forEach(element => {\n              todo.push(element.val());\n            });\n\n            if (todo.length > 0) {\n              setPagos(todo);\n            }\n          });\n        };\n\n        data();\n      } else {\n        alert(\"error\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    obtenerCuentas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      align: \"center\",\n      children: \"Cuentas de Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Nombre del banco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Numero Cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Tipo cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: datosCuentas.length > 0 ? datosCuentas.map((row, key) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"rigth\",\n            scope: \"row\",\n            children: ++key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.name_bank_account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.number_account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.type_bank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.mount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)) : console.log(' no existe data')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      align: \"center\",\n      children: \"Cuentas de Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Nombre del banco\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Numero Cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Tipo cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            color: \"primary\",\n            align: \"right\",\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: datosCuentas.length > 0 ? datosCuentas.map((row, key) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"rigth\",\n            scope: \"row\",\n            children: ++key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.name_bank_account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.number_account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.type_bank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.mount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)) : console.log(' no existe data')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.seeMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movlist, \"wrXr4hnuNuFc5BqUOGjdoG6ykGc=\");\n\n_c3 = Movlist;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UseStyles$makeStyles\");\n$RefreshReg$(_c2, \"UseStyles\");\n$RefreshReg$(_c3, \"Movlist\");","map":{"version":3,"sources":["/home/ram/proyectowalletfirebase/FrontEnd/src/Components/MovList/movlist.jsx"],"names":["React","useState","useEffect","Link","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Title","auth","database","API","process","env","REACT_APP_API","idUsuario","localStorage","getItem","preventDefault","event","UseStyles","theme","seeMore","marginTop","spacing","Movlist","session_id","classes","movimientos","setMovimientos","datosCuentas","setCuentas","suma","sumaCuentas","setsuma","datosPagos","setPagos","styles","root","margin","padding","closeButton","position","right","top","color","palette","grey","textField","marginLeft","marginRight","width","table","minWidth","obtenerCuentas","onAuthStateChanged","z","data","ref","child","uid","on","e","todo","da","forEach","element","push","val","length","alert","obtenerPagos","map","row","key","name_bank_account","number_account","type_bank","mount","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import Link from '@material-ui/core/Link';\nimport { Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../Title/title';\nimport { auth,database } from '../../firebaseconf';\n\n\nconst API = process.env.REACT_APP_API;\nconst idUsuario = localStorage.getItem(\"idUsuario\");\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst UseStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Movlist() {\n  const session_id = localStorage.getItem(\"Session_id\");\n  const classes = UseStyles();\n  const [movimientos, setMovimientos]=useState([]);\n  const [datosCuentas, setCuentas] = useState({});\n  let suma=0.0;\n  const [sumaCuentas,setsuma]=useState(0);\n  const [datosPagos, setPagos] = useState({});\n\n  const styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n  const obtenerCuentas = async () => {\n    await auth.onAuthStateChanged((z)=>{if(z){\n        const data= async()=>{\n            await database.ref().child(z.uid).child('cuentas').on('value',(e)=>{\n            const todo=[];\n            const da= e.forEach(element => {\n                todo.push(element.val())\n            });\n            if(todo.length>0){\n                setCuentas(todo);\n              }   \n        })}\n        data();\n    }else{\n        alert(\"error\")\n    }})\n        }\n\n\n        const obtenerPagos = async () => {\n          await auth.onAuthStateChanged((z)=>{if(z){\n              const data= async()=>{\n                  await database.ref().child(z.uid).child('Pagos').on('value',(e)=>{\n                  const todo=[];\n                  const da= e.forEach(element => {\n                      todo.push(element.val())\n                  });\n                  if(todo.length>0){\n                      setPagos(todo);\n                    }   \n              })}\n              data();\n          }else{\n              alert(\"error\")\n          }})\n              }\n\n  useEffect(() => {\n    obtenerCuentas();\n  }, [])\n\n\n  return (\n    <React.Fragment>\n      <Title align=\"center\">Cuentas de Usuario</Title>\n      <Table size=\"small\">\n      <TableHead>\n             <TableRow>\n                 <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Nombre del banco</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Numero Cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Tipo cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                  </TableRow>\n              </TableHead>\n        <TableBody>\n        {\n            datosCuentas.length>0 ?\n            (datosCuentas.map((row, key) => (\n              <TableRow key={key}>\n                <TableCell component=\"rigth\" scope=\"row\">{++key}</TableCell>\n                           <TableCell align=\"right\">{row.name_bank_account}</TableCell>\n                           <TableCell align=\"right\">{row.number_account}</TableCell>\n                            <TableCell align=\"right\">{row.type_bank}</TableCell>\n                            <TableCell align=\"right\">{row.mount}</TableCell>\n                            <TableCell align=\"right\">\n                            </TableCell>\n                </TableRow>\n                              ))):\n            (console.log(' no existe data'))}\n        </TableBody>\n      </Table>\n      <Title align=\"center\">Cuentas de Usuario</Title>\n      <Table size=\"small\">\n      <TableHead>\n             <TableRow>\n                 <TableCell color=\"primary\" align=\"right\">#</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Nombre del banco</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Numero Cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Tipo cuenta</TableCell>\n                  <TableCell color=\"primary\" align=\"right\">Monto</TableCell>\n                  </TableRow>\n              </TableHead>\n        <TableBody>\n        {\n            datosCuentas.length>0 ?\n            (datosCuentas.map((row, key) => (\n              <TableRow key={key}>\n                <TableCell component=\"rigth\" scope=\"row\">{++key}</TableCell>\n                           <TableCell align=\"right\">{row.name_bank_account}</TableCell>\n                           <TableCell align=\"right\">{row.number_account}</TableCell>\n                            <TableCell align=\"right\">{row.type_bank}</TableCell>\n                            <TableCell align=\"right\">{row.mount}</TableCell>\n                            <TableCell align=\"right\">\n                            </TableCell>\n                </TableRow>\n                              ))):\n            (console.log(' no existe data'))}\n        </TableBody>\n      </Table>\n      \n      \n      <div className={classes.seeMore}>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}